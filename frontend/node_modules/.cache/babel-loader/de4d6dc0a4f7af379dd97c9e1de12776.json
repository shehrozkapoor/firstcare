{"ast":null,"code":"import Core from \"./core.mjs\";\nimport { rootInstanceSymbol } from \"./utils/rootInstance.mjs\";\nimport { metaSchemaFactory } from \"./dataMap/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\"; // FIXME: Bug in eslint-plugin-import: https://github.com/benmosher/eslint-plugin-import/issues/1883\n\n/* eslint-disable import/named */\n\nimport { dictionaryKeys, getTranslatedPhrase, registerLanguageDictionary, getLanguagesDictionaries, getLanguageDictionary } from \"./i18n/registry.mjs\";\n/* eslint-enable import/named */\n\nimport { registerCellType } from \"./cellTypes/registry.mjs\";\nimport { TextCellType } from \"./cellTypes/textType/index.mjs\";\nimport { BaseEditor } from \"./editors/baseEditor/index.mjs\"; // register default mandatory cell type for the Base package\n\nregisterCellType(TextCellType); // export the `BaseEditor` class to the Handsontable global namespace\n\nHandsontable.editors = {\n  BaseEditor: BaseEditor\n};\n/**\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\n * @param {object} userSettings The user defined options.\n * @returns {Core}\n */\n\nfunction Handsontable(rootElement, userSettings) {\n  var instance = new Core(rootElement, userSettings || {}, rootInstanceSymbol);\n  instance.init();\n  return instance;\n}\n\nHandsontable.Core = function (rootElement) {\n  var userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Core(rootElement, userSettings, rootInstanceSymbol);\n};\n\nHandsontable.DefaultSettings = metaSchemaFactory();\nHandsontable.hooks = Hooks.getSingleton();\nHandsontable.packageName = 'handsontable';\nHandsontable.buildDate = \"13/01/2022 12:30:03\";\nHandsontable.version = \"11.1.0\";\nHandsontable.languages = {\n  dictionaryKeys: dictionaryKeys,\n  getLanguageDictionary: getLanguageDictionary,\n  getLanguagesDictionaries: getLanguagesDictionaries,\n  registerLanguageDictionary: registerLanguageDictionary,\n  getTranslatedPhrase: getTranslatedPhrase\n};\nexport default Handsontable;","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/node_modules/handsontable/base.mjs"],"names":["Core","rootInstanceSymbol","metaSchemaFactory","Hooks","dictionaryKeys","getTranslatedPhrase","registerLanguageDictionary","getLanguagesDictionaries","getLanguageDictionary","registerCellType","TextCellType","BaseEditor","Handsontable","editors","rootElement","userSettings","instance","init","arguments","length","undefined","DefaultSettings","hooks","getSingleton","packageName","buildDate","version","languages"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CAAuC;;AAEvC;;AAEA,SAASC,cAAT,EAAyBC,mBAAzB,EAA8CC,0BAA9C,EAA0EC,wBAA1E,EAAoGC,qBAApG,QAAiI,qBAAjI;AACA;;AAEA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,gCAA3B,C,CAA6D;;AAE7DF,gBAAgB,CAACC,YAAD,CAAhB,C,CAAgC;;AAEhCE,YAAY,CAACC,OAAb,GAAuB;AACrBF,EAAAA,UAAU,EAAEA;AADS,CAAvB;AAGA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBE,WAAtB,EAAmCC,YAAnC,EAAiD;AAC/C,MAAIC,QAAQ,GAAG,IAAIhB,IAAJ,CAASc,WAAT,EAAsBC,YAAY,IAAI,EAAtC,EAA0Cd,kBAA1C,CAAf;AACAe,EAAAA,QAAQ,CAACC,IAAT;AACA,SAAOD,QAAP;AACD;;AAEDJ,YAAY,CAACZ,IAAb,GAAoB,UAAUc,WAAV,EAAuB;AACzC,MAAIC,YAAY,GAAGG,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAvF;AACA,SAAO,IAAIlB,IAAJ,CAASc,WAAT,EAAsBC,YAAtB,EAAoCd,kBAApC,CAAP;AACD,CAHD;;AAKAW,YAAY,CAACS,eAAb,GAA+BnB,iBAAiB,EAAhD;AACAU,YAAY,CAACU,KAAb,GAAqBnB,KAAK,CAACoB,YAAN,EAArB;AACAX,YAAY,CAACY,WAAb,GAA2B,cAA3B;AACAZ,YAAY,CAACa,SAAb,GAAyB,qBAAzB;AACAb,YAAY,CAACc,OAAb,GAAuB,QAAvB;AACAd,YAAY,CAACe,SAAb,GAAyB;AACvBvB,EAAAA,cAAc,EAAEA,cADO;AAEvBI,EAAAA,qBAAqB,EAAEA,qBAFA;AAGvBD,EAAAA,wBAAwB,EAAEA,wBAHH;AAIvBD,EAAAA,0BAA0B,EAAEA,0BAJL;AAKvBD,EAAAA,mBAAmB,EAAEA;AALE,CAAzB;AAOA,eAAeO,YAAf","sourcesContent":["import Core from \"./core.mjs\";\nimport { rootInstanceSymbol } from \"./utils/rootInstance.mjs\";\nimport { metaSchemaFactory } from \"./dataMap/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\"; // FIXME: Bug in eslint-plugin-import: https://github.com/benmosher/eslint-plugin-import/issues/1883\n\n/* eslint-disable import/named */\n\nimport { dictionaryKeys, getTranslatedPhrase, registerLanguageDictionary, getLanguagesDictionaries, getLanguageDictionary } from \"./i18n/registry.mjs\";\n/* eslint-enable import/named */\n\nimport { registerCellType } from \"./cellTypes/registry.mjs\";\nimport { TextCellType } from \"./cellTypes/textType/index.mjs\";\nimport { BaseEditor } from \"./editors/baseEditor/index.mjs\"; // register default mandatory cell type for the Base package\n\nregisterCellType(TextCellType); // export the `BaseEditor` class to the Handsontable global namespace\n\nHandsontable.editors = {\n  BaseEditor: BaseEditor\n};\n/**\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\n * @param {object} userSettings The user defined options.\n * @returns {Core}\n */\n\nfunction Handsontable(rootElement, userSettings) {\n  var instance = new Core(rootElement, userSettings || {}, rootInstanceSymbol);\n  instance.init();\n  return instance;\n}\n\nHandsontable.Core = function (rootElement) {\n  var userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Core(rootElement, userSettings, rootInstanceSymbol);\n};\n\nHandsontable.DefaultSettings = metaSchemaFactory();\nHandsontable.hooks = Hooks.getSingleton();\nHandsontable.packageName = 'handsontable';\nHandsontable.buildDate = \"13/01/2022 12:30:03\";\nHandsontable.version = \"11.1.0\";\nHandsontable.languages = {\n  dictionaryKeys: dictionaryKeys,\n  getLanguageDictionary: getLanguageDictionary,\n  getLanguagesDictionaries: getLanguagesDictionaries,\n  registerLanguageDictionary: registerLanguageDictionary,\n  getTranslatedPhrase: getTranslatedPhrase\n};\nexport default Handsontable;"]},"metadata":{},"sourceType":"module"}