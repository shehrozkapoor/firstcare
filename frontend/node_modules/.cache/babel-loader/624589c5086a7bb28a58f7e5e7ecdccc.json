{"ast":null,"code":"import { mapState, mapMutations, mapActions } from 'vuex';\nexport default {\n  name: \"CustomAutoComplete\",\n  props: ['placeholder'],\n  methods: { ...mapActions(['getSpecificPatient']),\n\n    searchItems(event) {\n      let query = event.query;\n      let filteredItems = [];\n      this.getSpecificPatient(query);\n\n      for (let i = 0; i < this.patients.length; i++) {\n        let item = this.patients[i];\n\n        if (item.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filteredItems.push(item);\n        }\n      }\n\n      this.filteredItems = filteredItems;\n    }\n\n  },\n  computed: { ...mapState(['patients'])\n  },\n\n  data() {\n    return {\n      filteredItems: null,\n      selectedItem: null\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAKA,SAAQA,QAAR,EAAiBC,YAAjB,EAA8BC,UAA9B,QAA+C,MAA/C;AAEA,eAAe;AACXC,MAAI,EAAC,oBADM;AAEXC,OAAK,EAAC,CAAC,aAAD,CAFK;AAGdC,SAAO,EAAE,EACF,GAAGH,UAAU,CAAC,CAAC,oBAAD,CAAD,CADX;;AAERI,eAAW,CAACC,KAAD,EAAQ;AACT,UAAIC,KAAI,GAAID,KAAK,CAACC,KAAlB;AACA,UAAIC,aAAY,GAAI,EAApB;AAEA,WAAKC,kBAAL,CAAwBF,KAAxB;;AAEA,WAAI,IAAIG,IAAI,CAAZ,EAAeA,IAAI,KAAKC,QAAL,CAAcC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C,YAAIG,IAAG,GAAI,KAAKF,QAAL,CAAcD,CAAd,CAAX;;AACA,YAAIG,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2BR,KAAK,CAACO,WAAN,EAA3B,MAAoD,CAAxD,EAA2D;AACvDN,uBAAa,CAACQ,IAAd,CAAmBH,IAAnB;AACJ;AACJ;;AAEA,WAAKL,aAAL,GAAqBA,aAArB;AACJ;;AAhBE,GAHK;AAqBXS,UAAQ,EAAC,EACL,GAAGlB,QAAQ,CAAC,CAAC,UAAD,CAAD;AADN,GArBE;;AAwBXmB,MAAI,GAAG;AACH,WAAO;AACHV,mBAAa,EAAE,IADZ;AAEHW,kBAAY,EAAE;AAFX,KAAP;AAIJ;;AA7BW,CAAf","names":["mapState","mapMutations","mapActions","name","props","methods","searchItems","event","query","filteredItems","getSpecificPatient","i","patients","length","item","toLowerCase","indexOf","push","computed","data","selectedItem"],"sourceRoot":"","sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/src/components/Custom/CustomAutoComplete.vue"],"sourcesContent":["<template>\n    <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems($event)\" :placeholder=\"placeholder\" class=\"w-full\"/>\n</template>\n\n<script>\nimport {mapState,mapMutations,mapActions} from 'vuex'\n\nexport default {\n    name:\"CustomAutoComplete\",\n    props:['placeholder'],\n\tmethods: {\n        ...mapActions(['getSpecificPatient']),\n\t\tsearchItems(event) {\n            let query = event.query;\n            let filteredItems = [];\n\n            this.getSpecificPatient(query);\n\n            for(let i = 0; i < this.patients.length; i++) {\n                let item = this.patients[i];\n                if (item.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n\t},\n    computed:{\n        ...mapState(['patients'])\n    },\n    data() {\n        return {\n            filteredItems: null,\n            selectedItem: null,\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}