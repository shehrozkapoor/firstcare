{"ast":null,"code":"// Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\n\nimport { defineComponent, toRefs } from 'vue'; // Types\n\nexport const VDefaultsProvider = defineComponent({\n  name: 'VDefaultsProvider',\n  props: {\n    defaults: Object,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      defaults,\n      reset,\n      root,\n      scoped\n    } = toRefs(props);\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped\n    });\n    return () => {\n      var _slots$default;\n\n      return (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots);\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAAA;SACSA,uB,kCAET;;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,KAAxC,C,CAEA;;AAIA,OAAO,MAAMC,iBAAiB,GAAGF,eAAe,CAAC;AAC/CG,MAAI,EAAE,mBADyC;AAG/CC,OAAK,EAAE;AACLC,YAAQ,EAAEC,MADL;AAELC,SAAK,EAAE,CAACC,MAAD,EAASC,MAAT,CAFF;AAGLC,QAAI,EAAEC,OAHD;AAILC,UAAM,EAAED;AAJH,GAHwC;;AAU/CE,OAAK,CAAET,KAAF,QAAoB;AAAA,QAAX;AAAEU;AAAF,QAAWC;AACvB,UAAM;AAAEV,cAAF;AAAYE,WAAZ;AAAmBG,UAAnB;AAAyBE;AAAzB,QAAoCX,MAAM,CAACG,KAAD,CAAhD;AAEAL,mBAAe,CAACM,QAAD,EAAW;AACxBE,WADwB;AAExBG,UAFwB;AAGxBE;AAHwB,KAAX,CAAfb;AAMA,WAAO;AAAA;;AAAA,+BAAMe,KAAK,CAACE,OAAZ,qBAAMC,0BAAN;AAAP;AACD;;AApB8C,CAAD,CAAzC","names":["provideDefaults","defineComponent","toRefs","VDefaultsProvider","name","props","defaults","Object","reset","Number","String","root","Boolean","scoped","setup","slots","_ref","default","_slots$default"],"sources":["../../../src/components/VDefaultsProvider/VDefaultsProvider.tsx"],"sourcesContent":["// Composables\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { defineComponent, toRefs } from 'vue'\n\n// Types\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { PropType } from 'vue'\n\nexport const VDefaultsProvider = defineComponent({\n  name: 'VDefaultsProvider',\n\n  props: {\n    defaults: Object as PropType<DefaultsOptions>,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean,\n  },\n\n  setup (props, { slots }) {\n    const { defaults, reset, root, scoped } = toRefs(props)\n\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped,\n    })\n\n    return () => slots.default?.()\n  },\n})\n"]},"metadata":{},"sourceType":"module"}