{"ast":null,"code":"// Utilities\nimport { computed } from 'vue';\nimport { convertToUnit, getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']; // Composables\n\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default'\n  }\n}, 'size');\nexport function useSize(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const sizeClasses = computed(() => {\n    return predefinedSizes.includes(props.size) ? `${name}--size-${props.size}` : null;\n  });\n  const sizeStyles = computed(() => {\n    return !predefinedSizes.includes(props.size) && props.size ? {\n      width: convertToUnit(props.size),\n      height: convertToUnit(props.size)\n    } : null;\n  });\n  return {\n    sizeClasses,\n    sizeStyles\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,eAAeC,wBAAwBC,oB,qBAEhD;;AACA,MAAMC,eAAe,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAAgC,OAAhC,EAAyC,SAAzC,CAAxB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGF,YAAY,CAAC;AACxCG,MAAI,EAAE;AACJC,QAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,WAAO,EAAE;AAFL;AADkC,CAAD,EAKtC,MALsC,CAAlC;AAOP,OAAO,SAASC,OAAT,CACLC,KADK,EAGL;AAAA,MADAC,IACA,uEADOX,sBAAsB,EAC7B;AACA,QAAMY,WAAW,GAAGd,QAAQ,CAAC,MAAM;AACjC,WAAOI,eAAe,CAACW,QAAhBX,CAAyBQ,KAAK,CAACN,IAA/BF,IACF,GAAES,IAAK,UAASD,KAAK,CAACN,IAAK,EADzBF,GAEH,IAFJ;AAD0B,IAA5B;AAMA,QAAMY,UAAU,GAAGhB,QAAQ,CAAC,MAAM;AAChC,WAAO,CAACI,eAAe,CAACW,QAAhBX,CAAyBQ,KAAK,CAACN,IAA/BF,CAAD,IAAmDQ,KAAK,CAACN,IAAzD,GACF;AACDW,WAAK,EAAEhB,aAAa,CAACW,KAAK,CAACN,IAAP,CADnB;AAEDY,YAAM,EAAEjB,aAAa,CAACW,KAAK,CAACN,IAAP;AAFpB,KADE,GAIA,IAJP;AADyB,IAA3B;AAQA,SAAO;AAAEQ,eAAF;AAAeE;AAAf,GAAP;AACD","names":["computed","convertToUnit","getCurrentInstanceName","propsFactory","predefinedSizes","makeSizeProps","size","type","String","Number","default","useSize","props","name","sizeClasses","includes","sizeStyles","width","height"],"sources":["../../src/composables/size.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']\n\nexport interface SizeProps {\n  size?: string | number\n}\n\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default',\n  },\n}, 'size')\n\nexport function useSize (\n  props: SizeProps,\n  name = getCurrentInstanceName(),\n) {\n  const sizeClasses = computed(() => {\n    return predefinedSizes.includes(props.size as string)\n      ? `${name}--size-${props.size}`\n      : null\n  })\n\n  const sizeStyles = computed(() => {\n    return !predefinedSizes.includes(props.size as string) && props.size\n      ? ({\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }) : null\n  })\n\n  return { sizeClasses, sizeStyles }\n}\n"]},"metadata":{},"sourceType":"module"}