{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_AutoComplete = _resolveComponent(\"AutoComplete\");\n\n  return _openBlock(), _createBlock(_component_AutoComplete, {\n    modelValue: _ctx.selectedItem,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedItem = $event),\n    suggestions: _ctx.filteredItems,\n    onComplete: _ctx.searchItems,\n    virtualScrollerOptions: {\n      itemSize: 31\n    },\n    field: \"label\",\n    dropdown: \"\",\n    placeholder: _ctx.placeholder\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"suggestions\", \"onComplete\", \"placeholder\"]);\n}","map":{"version":3,"mappings":";;;;uBACIA,aAAwLC,uBAAxL,EAAwL;gBAAjKC,iBAAiK;+DAAjKA,oBAAYC,OAAqJ;AAAlJC,eAAW,EAAEF,kBAAqI;AAArHG,cAAQ,EAAEH,gBAA2G;AAA7FI,0BAAsB,EAAE;AAAAC;AAAA,KAAqE;AAAnDC,SAAK,EAAC,OAA6C;AAArCC,YAAQ,EAAR,EAAqC;AAA3BC,eAAW,EAAER;AAAc,GAAxL;;AAAA","names":["_createBlock","_component_AutoComplete","_ctx","$event","suggestions","onComplete","virtualScrollerOptions","itemSize","field","dropdown","placeholder"],"sourceRoot":"","sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/src/components/Custom/CustomAutoComplete.vue"],"sourcesContent":["<template>\n    <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown :placeholder=\"placeholder\"/>\n</template>\n\n<script>\nimport {mapState,mapMutations,mapActions} from 'vuex'\n\nexport default {\n    name:\"CustomAutoComplete\",\n    props:['placeholder'],\n\tmethods: {\n        ...mapActions(['getSpecificPatient'])\n\n\t\tsearchItems(event) {\n            let query = event.query;\n            let filteredItems = [];\n\n            for(let i = 0; i < this.patients.length; i++) {\n                let item = this.patients[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n\t},\n    computed:{\n        ...mapState(['patients'])\n    },\n    data() {\n        return {\n            filteredItems: null,\n            selectedItem: null,\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}