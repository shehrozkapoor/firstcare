{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { createHighlight } from \"./types/index.mjs\";\nimport { ACTIVE_HEADER_TYPE, AREA_TYPE, CELL_TYPE, CUSTOM_SELECTION_TYPE, FILL_TYPE, HEADER_TYPE } from \"./constants.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight = /*#__PURE__*/function (_Symbol$iterator) {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n\n\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType, coords) {\n      var type = highlightType; // Legacy compatibility.\n\n      if (highlightType === CELL_TYPE) {\n        type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n      }\n\n      var disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {object} selectionInstance The selection instance.\n     */\n\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(selectionInstance) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION_TYPE, _objectSpread(_objectSpread({}, this.options), selectionInstance)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n\n  return Highlight;\n}(Symbol.iterator);\n\nexport default Highlight;","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/node_modules/handsontable/selection/highlight/highlight.mjs"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","createHighlight","ACTIVE_HEADER_TYPE","AREA_TYPE","CELL_TYPE","CUSTOM_SELECTION_TYPE","FILL_TYPE","HEADER_TYPE","arrayEach","Highlight","_Symbol$iterator","options","layerLevel","cell","fill","areas","Map","headers","activeHeaders","customSelections","isEnabledFor","highlightType","coords","type","disableHighlight","disabledCellSelection","row","col","includes","useLayerLevel","level","undefined","getCell","getFill","createOrGetArea","area","has","get","set","getAreas","values","createOrGetHeader","header","getHeaders","createOrGetActiveHeader","getActiveHeaders","getCustomSelections","addCustomSelection","selectionInstance","clear","highlight","concat"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { createHighlight } from \"./types/index.mjs\";\nimport { ACTIVE_HEADER_TYPE, AREA_TYPE, CELL_TYPE, CUSTOM_SELECTION_TYPE, FILL_TYPE, HEADER_TYPE } from \"./constants.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight = /*#__PURE__*/function (_Symbol$iterator) {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType, coords) {\n      var type = highlightType; // Legacy compatibility.\n\n      if (highlightType === CELL_TYPE) {\n        type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n      }\n\n      var disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @returns {Selection}\n     */\n\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {object} selectionInstance The selection instance.\n     */\n\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(selectionInstance) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION_TYPE, _objectSpread(_objectSpread({}, this.options), selectionInstance)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     *\n     * @returns {Selection[]}\n     */\n\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n\n  return Highlight;\n}(Symbol.iterator);\n\nexport default Highlight;"]},"metadata":{},"sourceType":"module"}