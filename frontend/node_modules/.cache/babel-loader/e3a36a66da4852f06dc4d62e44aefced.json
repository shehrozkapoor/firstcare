{"ast":null,"code":"export default {\n  name: \"CustomAutoComplete\",\n\n  created() {\n    this.countryService = new CountryService();\n  },\n\n  methods: {\n    searchItems(event) {\n      //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n      let query = event.query;\n      let filteredItems = [];\n\n      for (let i = 0; i < this.items.length; i++) {\n        let item = this.items[i];\n\n        if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filteredItems.push(item);\n        }\n      }\n\n      this.filteredItems = filteredItems;\n    }\n\n  },\n\n  data() {\n    return {\n      filteredItems: null,\n      selectedItem: null\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAKA,eAAe;AACXA,MAAI,EAAC,oBADM;;AAEPC,SAAO,GAAG;AAChB,SAAKC,cAAL,GAAsB,IAAIC,cAAJ,EAAtB;AACA,GAJa;;AAKdC,SAAO,EAAE;AACRC,eAAW,CAACC,KAAD,EAAQ;AACT;AACA,UAAIC,KAAI,GAAID,KAAK,CAACC,KAAlB;AACA,UAAIC,aAAY,GAAI,EAApB;;AAEA,WAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,KAAKC,KAAL,CAAWC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,YAAIG,IAAG,GAAI,KAAKF,KAAL,CAAWD,CAAX,CAAX;;AACA,YAAIG,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,OAAzB,CAAiCR,KAAK,CAACO,WAAN,EAAjC,MAA0D,CAA9D,EAAiE;AAC7DN,uBAAa,CAACQ,IAAd,CAAmBJ,IAAnB;AACJ;AACJ;;AAEA,WAAKJ,aAAL,GAAqBA,aAArB;AACJ;;AAdE,GALK;;AAqBXS,MAAI,GAAG;AACH,WAAO;AACHT,mBAAa,EAAE,IADZ;AAEHU,kBAAY,EAAE;AAFX,KAAP;AAIJ;;AA1BW,CAAf","names":["name","created","countryService","CountryService","methods","searchItems","event","query","filteredItems","i","items","length","item","label","toLowerCase","indexOf","push","data","selectedItem"],"sourceRoot":"","sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/src/components/Custom/CustomAutoComplete.vue"],"sourcesContent":["<template>\n    <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n</template>\n\n<script>\nexport default {\n    name:\"CustomAutoComplete\",\n        created() {\n\t\tthis.countryService = new CountryService();\n\t},\n\tmethods: {\n\t\tsearchItems(event) {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n\t},\n    data() {\n        return {\n            filteredItems: null,\n            selectedItem: null,\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}