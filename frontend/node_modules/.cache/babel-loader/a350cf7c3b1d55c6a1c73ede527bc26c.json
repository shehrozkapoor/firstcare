{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport var PLUGIN_KEY = 'manualColumnMove';\nexport var PLUGIN_PRIORITY = 120;\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nexport var ManualColumnMove = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n\n  var _super = _createSuper(ManualColumnMove);\n\n  function ManualColumnMove(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ManualColumnMove);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;.\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      },\n      cachedDropIndex: void 0\n    });\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.buildPluginUI();\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.moveBySettingsOrLoad();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {number} column Visual column index to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, finalIndex) {\n      return this.moveColumns([column], finalIndex);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, finalIndex) {\n      var priv = privatePool.get(this);\n      var dropIndex = priv.cachedDropIndex;\n      var movePossible = this.isMovePossible(columns, finalIndex);\n      var beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n      priv.cachedDropIndex = void 0;\n\n      if (beforeMoveHook === false) {\n        return;\n      }\n\n      if (movePossible) {\n        this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n      }\n\n      var movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n      this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n      return movePerformed;\n    }\n    /**\n     * Drag a single column to drop index position.\n     *\n     * @param {number} column Visual column index to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumn\",\n    value: function dragColumn(column, dropIndex) {\n      return this.dragColumns([column], dropIndex);\n    }\n    /**\n     * Drag multiple columns to drop index position.\n     *\n     * @param {Array} columns Array of visual column indexes to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumns\",\n    value: function dragColumns(columns, dropIndex) {\n      var finalIndex = this.countFinalIndex(columns, dropIndex);\n      var priv = privatePool.get(this);\n      priv.cachedDropIndex = dropIndex;\n      return this.moveColumns(columns, finalIndex);\n    }\n    /**\n     * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n     * possible, i.e. You can’t move more than one element to the last position.\n     *\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMovePossible\",\n    value: function isMovePossible(movedColumns, finalIndex) {\n      var length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength(); // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n\n      var tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n      var tooLowDestinationIndex = finalIndex < 0;\n      var tooLowMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn < 0;\n      });\n      var tooHighMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn >= length;\n      });\n\n      if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Indicates if order of columns was changed.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isColumnOrderChanged\",\n    value: function isColumnOrderChanged(movedColumns, finalIndex) {\n      return movedColumns.some(function (column, nrOfMovedElement) {\n        return column - nrOfMovedElement !== finalIndex;\n      });\n    }\n    /**\n     * Count the final column index from the drop index.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n     * @returns {number} Visual column index, being a start index for the moved columns.\n     */\n\n  }, {\n    key: \"countFinalIndex\",\n    value: function countFinalIndex(movedColumns, dropIndex) {\n      var numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, function (numberOfColumns, currentColumnIndex) {\n        if (currentColumnIndex < dropIndex) {\n          numberOfColumns += 1;\n        }\n\n        return numberOfColumns;\n      }, 0);\n      return dropIndex - numberOfColumnsLowerThanDropIndex;\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {number} fromColumn Visual column index.\n     * @param {number} toColumn Visual column index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(fromColumn, toColumn) {\n      var columnMapper = this.hot.columnIndexMapper;\n      var columnsWidth = 0;\n\n      for (var visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n        // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n        // when column is stretched.\n        var renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n\n        if (visualColumnIndex < 0) {\n          columnsWidth += this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else if (renderableIndex !== null) {\n          columnsWidth += this.hot.view.wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n        }\n      }\n\n      return columnsWidth;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"moveBySettingsOrLoad\",\n    value: function moveBySettingsOrLoad() {\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        var persistentState = this.persistentStateLoad();\n\n        if (persistentState.length) {\n          this.moveColumns(persistentState, 0);\n        }\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsTop section.\n     *\n     * @private\n     * @param {number} column Visual column index to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateLoad\n     * @returns {Array} Stored state.\n     */\n\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n      return storedState.value ? storedState.value : [];\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @param {number} start The start index.\n     * @param {number} end The end index.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Update the UI visual position.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coords - 1);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0)); // eslint-disable-line max-len\n\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coords < priv.countCols) {\n          priv.coords += 1;\n        }\n      }\n\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n\n      if (this.isFixedColumnsLeft(priv.coords)) {\n        tdOffsetLeft += scrollLeft;\n      }\n\n      tdOffsetLeft += rowHeaderWidth;\n\n      if (priv.coords < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coords >= priv.countCols ? priv.countCols - 1 : priv.coords; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coords;\n\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coords < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this3 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this3.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.target, 'sortAction');\n\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n\n      var from = selection.from,\n          to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        controller.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coords = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.offsetX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col - 1) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start - 1) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n\n      if (event.target === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n\n      controller.row = true;\n      controller.column = true;\n      controller.cell = true;\n      priv.coords = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      var target = priv.target.col;\n      var columnsLen = priv.columnsToMove.length;\n      priv.coords = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n\n      if (columnsLen < 1 || target === void 0) {\n        return;\n      }\n\n      var firstMovedVisualColumn = priv.columnsToMove[0];\n      var firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n      var movePerformed = this.dragColumns(priv.columnsToMove, target);\n      priv.columnsToMove.length = 0;\n\n      if (movePerformed === true) {\n        this.persistentStateSave();\n        this.hot.render();\n        this.hot.view.adjustElementsSize(true);\n        var selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n        var selectionEnd = selectionStart + columnsLen - 1;\n        this.hot.selectColumns(selectionStart, selectionEnd);\n      }\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * Builds the plugin's UI.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"buildPluginUI\",\n    value: function buildPluginUI() {\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.moveBySettingsOrLoad();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ManualColumnMove;\n}(BasePlugin);","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/node_modules/handsontable/plugins/manualColumnMove/manualColumnMove.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","Hooks","arrayReduce","addClass","removeClass","offset","hasClass","rangeEach","EventManager","BacklightUI","GuidelineUI","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","privatePool","WeakMap","CSS_PLUGIN","CSS_SHOW_UI","CSS_ON_MOVING","CSS_AFTER_SELECTION","ManualColumnMove","_BasePlugin","_super","hotInstance","_this","set","columnsToMove","countCols","fixedColumns","pressed","eventPageX","coords","TD","col","cachedDropIndex","eventManager","backlight","guideline","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","addHook","onBeforeOnCellMouseDown","onBeforeOnCellMouseOver","onAfterScrollVertically","onAfterLoadData","buildPluginUI","registerEvents","rootElement","updatePlugin","disablePlugin","moveBySettingsOrLoad","unregisterEvents","destroy","moveColumn","column","finalIndex","moveColumns","columns","priv","dropIndex","movePossible","isMovePossible","beforeMoveHook","runHooks","columnIndexMapper","moveIndexes","movePerformed","isColumnOrderChanged","dragColumn","dragColumns","countFinalIndex","movedColumns","getNotTrimmedIndexesLength","tooHighDestinationIndex","tooLowDestinationIndex","tooLowMovedColumnIndex","some","movedColumn","tooHighMovedColumnIndex","nrOfMovedElement","numberOfColumnsLowerThanDropIndex","numberOfColumns","currentColumnIndex","getColumnsWidth","fromColumn","toColumn","columnMapper","columnsWidth","visualColumnIndex","renderableIndex","getRenderableFromVisualIndex","view","wt","wtViewport","getRowHeaderWidth","wtTable","getStretchedColumnWidth","pluginSettings","Array","isArray","persistentState","persistentStateLoad","isFixedColumnsLeft","fixedColumnsLeft","persistentStateSave","getIndexesSequence","storedState","prepareColumnsToMoving","start","end","selectedColumns","push","refreshPositions","firstVisible","getFirstVisibleColumn","lastVisible","getLastVisibleColumn","scrollableElement","wtOverlays","scrollLeft","scrollX","tdOffsetLeft","THEAD","offsetLeft","mouseOffsetLeft","rootElementOffset","hiderWidth","hider","offsetWidth","tbodyOffsetLeft","TBODY","backlightElemMarginLeft","getOffset","left","backlightElemWidth","getSize","width","rowHeaderWidth","holder","hasRowHeaders","leftOverlay","clone","getColumnHeader","newCoordsCol","scrollViewportTo","backlightLeft","guidelineLeft","Math","abs","setPosition","_this3","documentElement","rootDocument","addEventListener","event","onMouseMove","onMouseUp","clear","controller","isHeaderSelection","selection","isSelectedByColumnHeader","getSelectedRangeLast","isSortingElement","button","guidelineIsNotReady","isBuilt","isAppended","backlightIsNotReady","appendTo","from","to","min","max","row","pageX","rowHeaders","countColumnsFrom","topPos","scrollTop","getColumnHeaderHeight","wrapperIsWindow","mouseOffset","offsetX","leftOffset","setSize","offsetHeight","setOffset","element","setTimeout","selectedRange","indexOf","cell","columnsLen","backlightWidth","firstMovedVisualColumn","firstMovedPhysicalColumn","toPhysicalColumn","render","adjustElementsSize","selectionStart","toVisualColumn","selectionEnd","selectColumns","headerHeight","posTop","build"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport var PLUGIN_KEY = 'manualColumnMove';\nexport var PLUGIN_PRIORITY = 120;\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nexport var ManualColumnMove = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n\n  var _super = _createSuper(ManualColumnMove);\n\n  function ManualColumnMove(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ManualColumnMove);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;.\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      },\n      cachedDropIndex: void 0\n    });\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.buildPluginUI();\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.moveBySettingsOrLoad();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {number} column Visual column index to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, finalIndex) {\n      return this.moveColumns([column], finalIndex);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, finalIndex) {\n      var priv = privatePool.get(this);\n      var dropIndex = priv.cachedDropIndex;\n      var movePossible = this.isMovePossible(columns, finalIndex);\n      var beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n      priv.cachedDropIndex = void 0;\n\n      if (beforeMoveHook === false) {\n        return;\n      }\n\n      if (movePossible) {\n        this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n      }\n\n      var movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n      this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n      return movePerformed;\n    }\n    /**\n     * Drag a single column to drop index position.\n     *\n     * @param {number} column Visual column index to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumn\",\n    value: function dragColumn(column, dropIndex) {\n      return this.dragColumns([column], dropIndex);\n    }\n    /**\n     * Drag multiple columns to drop index position.\n     *\n     * @param {Array} columns Array of visual column indexes to be dragged.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n     * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dragColumns\",\n    value: function dragColumns(columns, dropIndex) {\n      var finalIndex = this.countFinalIndex(columns, dropIndex);\n      var priv = privatePool.get(this);\n      priv.cachedDropIndex = dropIndex;\n      return this.moveColumns(columns, finalIndex);\n    }\n    /**\n     * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n     * possible, i.e. You can’t move more than one element to the last position.\n     *\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMovePossible\",\n    value: function isMovePossible(movedColumns, finalIndex) {\n      var length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength(); // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n\n      var tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n      var tooLowDestinationIndex = finalIndex < 0;\n      var tooLowMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn < 0;\n      });\n      var tooHighMovedColumnIndex = movedColumns.some(function (movedColumn) {\n        return movedColumn >= length;\n      });\n\n      if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Indicates if order of columns was changed.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isColumnOrderChanged\",\n    value: function isColumnOrderChanged(movedColumns, finalIndex) {\n      return movedColumns.some(function (column, nrOfMovedElement) {\n        return column - nrOfMovedElement !== finalIndex;\n      });\n    }\n    /**\n     * Count the final column index from the drop index.\n     *\n     * @private\n     * @param {Array} movedColumns Array of visual column indexes to be moved.\n     * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n     * @returns {number} Visual column index, being a start index for the moved columns.\n     */\n\n  }, {\n    key: \"countFinalIndex\",\n    value: function countFinalIndex(movedColumns, dropIndex) {\n      var numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, function (numberOfColumns, currentColumnIndex) {\n        if (currentColumnIndex < dropIndex) {\n          numberOfColumns += 1;\n        }\n\n        return numberOfColumns;\n      }, 0);\n      return dropIndex - numberOfColumnsLowerThanDropIndex;\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {number} fromColumn Visual column index.\n     * @param {number} toColumn Visual column index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(fromColumn, toColumn) {\n      var columnMapper = this.hot.columnIndexMapper;\n      var columnsWidth = 0;\n\n      for (var visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n        // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n        // when column is stretched.\n        var renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n\n        if (visualColumnIndex < 0) {\n          columnsWidth += this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else if (renderableIndex !== null) {\n          columnsWidth += this.hot.view.wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n        }\n      }\n\n      return columnsWidth;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"moveBySettingsOrLoad\",\n    value: function moveBySettingsOrLoad() {\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        var persistentState = this.persistentStateLoad();\n\n        if (persistentState.length) {\n          this.moveColumns(persistentState, 0);\n        }\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsTop section.\n     *\n     * @private\n     * @param {number} column Visual column index to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     *\n     * @private\n     * @fires Hooks#persistentStateLoad\n     * @returns {Array} Stored state.\n     */\n\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n      return storedState.value ? storedState.value : [];\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @param {number} start The start index.\n     * @param {number} end The end index.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Update the UI visual position.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coords - 1);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0)); // eslint-disable-line max-len\n\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coords < priv.countCols) {\n          priv.coords += 1;\n        }\n      }\n\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n\n      if (this.isFixedColumnsLeft(priv.coords)) {\n        tdOffsetLeft += scrollLeft;\n      }\n\n      tdOffsetLeft += rowHeaderWidth;\n\n      if (priv.coords < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coords >= priv.countCols ? priv.countCols - 1 : priv.coords; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coords;\n\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coords < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this3 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this3.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.target, 'sortAction');\n\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n\n      var from = selection.from,\n          to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        controller.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coords = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.offsetX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col - 1) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start - 1) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n\n      if (event.target === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n\n      controller.row = true;\n      controller.column = true;\n      controller.cell = true;\n      priv.coords = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      var target = priv.target.col;\n      var columnsLen = priv.columnsToMove.length;\n      priv.coords = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n\n      if (columnsLen < 1 || target === void 0) {\n        return;\n      }\n\n      var firstMovedVisualColumn = priv.columnsToMove[0];\n      var firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n      var movePerformed = this.dragColumns(priv.columnsToMove, target);\n      priv.columnsToMove.length = 0;\n\n      if (movePerformed === true) {\n        this.persistentStateSave();\n        this.hot.render();\n        this.hot.view.adjustElementsSize(true);\n        var selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n        var selectionEnd = selectionStart + columnsLen - 1;\n        this.hot.selectColumns(selectionStart, selectionEnd);\n      }\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * Builds the plugin's UI.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"buildPluginUI\",\n    value: function buildPluginUI() {\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.moveBySettingsOrLoad();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ManualColumnMove;\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}