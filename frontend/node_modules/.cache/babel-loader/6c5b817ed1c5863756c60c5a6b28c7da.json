{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBtnToggle.css\"; // Components\n\nimport { VBtnGroup } from \"../VBtnGroup/index.mjs\"; // Composables\n\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\"; // Utility\n\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VBtnToggleSymbol = Symbol.for('vuetify:v-btn-toggle');\nexport const VBtnToggle = genericComponent()({\n  name: 'VBtnToggle',\n  props: makeGroupProps({\n    selectedClass: 'v-btn--selected'\n  }),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isSelected,\n      next,\n      prev,\n      select,\n      selected\n    } = useGroup(props, VBtnToggleSymbol);\n    useRender(() => {\n      var _slots$default;\n\n      return _createVNode(VBtnGroup, {\n        \"class\": \"v-btn-toggle\"\n      }, {\n        default: () => [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n          isSelected,\n          next,\n          prev,\n          select,\n          selected\n        })]\n      });\n    });\n    return {\n      next,\n      prev,\n      select\n    };\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,0B,CAEA;;SACSA,iB,0BAET;;SACSC,gBAAgBC,gB,+BAEzB;;SACSC,kBAAkBC,iB,wBAE3B;;AAQA,OAAO,MAAMC,gBAA4C,GAAGC,MAAM,CAACC,GAAPD,CAAW,sBAAXA,CAArD;AAEP,OAAO,MAAME,UAAU,GAAGL,gBAAgB,GAIrC;AACHM,MAAI,EAAE,YADH;AAGHC,OAAK,EAAET,cAAc,CAAC;AAAEU,iBAAa,EAAE;AAAjB,GAAD,CAHlB;AAKHC,OAAK,EAAE;AACL,yBAAsBC,KAAD,IAAgB;AADhC,GALJ;;AASHC,OAAK,CAAEJ,KAAF,QAAoB;AAAA,QAAX;AAAEK;AAAF,QAAWC;AACvB,UAAM;AAAEC,gBAAF;AAAcC,UAAd;AAAoBC,UAApB;AAA0BC,YAA1B;AAAkCC;AAAlC,QAA+CnB,QAAQ,CAACQ,KAAD,EAAQL,gBAAR,CAA7D;AAEAD,aAAS,CAAC;AAAA;;AAAA;AAAA,iBACS;AADT;AAAAkB,0CAEJP,KAAK,CAACO,OAFF,qBAEJC,2BAAgB;AAChBN,oBADgB;AAEhBC,cAFgB;AAGhBC,cAHgB;AAIhBC,gBAJgB;AAKhBC;AALgB,SAAhB,CAFI;AAAA;AAAD,MAATjB;AAYA,WAAO;AACLc,UADK;AAELC,UAFK;AAGLC;AAHK,KAAP;AAKD;;AA7BE,CAJqC,CAAnC","names":["VBtnGroup","makeGroupProps","useGroup","genericComponent","useRender","VBtnToggleSymbol","Symbol","for","VBtnToggle","name","props","selectedClass","emits","value","setup","slots","_ref","isSelected","next","prev","select","selected","default","_slots$default"],"sources":["../../../src/components/VBtnToggle/VBtnToggle.tsx"],"sourcesContent":["// Styles\nimport './VBtnToggle.sass'\n\n// Components\nimport { VBtnGroup } from '@/components/VBtnGroup'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utility\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { GroupProvide } from '@/composables/group'\nimport type { InjectionKey } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport type BtnToggleSlotProps = 'isSelected' | 'select' | 'selected' | 'next' | 'prev'\nexport interface DefaultBtnToggleSlot extends Pick<GroupProvide, BtnToggleSlotProps> {}\n\nexport const VBtnToggleSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-btn-toggle')\n\nexport const VBtnToggle = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    default: [DefaultBtnToggleSlot]\n  }>\n}>()({\n  name: 'VBtnToggle',\n\n  props: makeGroupProps({ selectedClass: 'v-btn--selected' }),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, next, prev, select, selected } = useGroup(props, VBtnToggleSymbol)\n\n    useRender(() => (\n      <VBtnGroup class=\"v-btn-toggle\">\n        { slots.default?.({\n          isSelected,\n          next,\n          prev,\n          select,\n          selected,\n        } as DefaultBtnToggleSlot) }\n      </VBtnGroup>\n    ))\n\n    return {\n      next,\n      prev,\n      select,\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}