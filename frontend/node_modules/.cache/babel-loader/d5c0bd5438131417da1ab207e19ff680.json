{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  var _super = _createSuper(Comments);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var _this$range$from = this.range.from,\n          row = _this$range$from.row,\n          col = _this$range$from.col;\n\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var _this$hot = this.hot,\n          rowIndexMapper = _this$hot.rowIndexMapper,\n          columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n          visualRow = _this$range$from2.row,\n          visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn); // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n\n      var targetingPreviousRow = renderableRow === null;\n\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getFirstNotHiddenIndex(visualRow, -1));\n      }\n\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getFirstNotHiddenIndex(visualColumn, -1));\n      }\n\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n          rootWindow = _this$hot2.rootWindow,\n          wt = _this$hot2.view.wt;\n      var wtTable = wt.wtTable,\n          wtOverlays = wt.wtOverlays,\n          wtViewport = wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      });\n      var cellOffset = offset(TD);\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var cellTopOffset = cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset + lastRowHeight;\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      var readOnly = this.getCommentMeta(visualRow, visualColumn, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.getTopLeftCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.targetIsCellWithComment(event)) {\n        var range = new CellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/node_modules/handsontable/plugins/comments/comments.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_get","Reflect","get","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","addClass","closest","isChildOf","hasClass","offset","outerWidth","outerHeight","deepClone","deepExtend","isObject","EventManager","CellCoords","CellRange","BasePlugin","CommentEditor","checkSelectionConsistency","markLabelAsSelected","DisplaySwitch","C","PLUGIN_KEY","PLUGIN_PRIORITY","privatePool","WeakMap","META_COMMENT","META_COMMENT_VALUE","META_STYLE","META_READONLY","Comments","_BasePlugin","_super","hotInstance","_this","editor","displaySwitch","eventManager","range","preventEditorAutoSwitch","set","tempEditorDimensions","cellBelowCursor","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","rootDocument","getDisplayDelaySetting","addHook","options","addToContextMenu","TD","row","col","prop","cellProperties","onAfterRenderer","hide","addLocalHook","showAtCell","registerListeners","updatePlugin","disablePlugin","updateDelay","_this3","addEventListener","event","onMouseOver","onMouseDown","onMouseUp","getInputElement","onEditorBlur","onEditorMouseDown","onEditorMouseUp","setRange","clearRange","targetIsCellWithComment","closestCell","rootElement","targetIsCommentTextArea","setComment","from","Error","editorValue","getValue","comment","updateCommentMeta","render","setCommentAtCell","column","removeComment","forceRender","undefined","setCellMeta","removeCommentAtCell","getComment","getCommentMeta","getCommentAtCell","show","_this$range$from","countSourceRows","countSourceCols","meta","getCellMeta","refreshEditor","setValue","hidden","_renderableRow","_renderableColumn","force","isVisible","_this$hot","rowIndexMapper","columnIndexMapper","_this$range$from2","visualRow","visualColumn","renderableRow","getRenderableFromVisualIndex","renderableColumn","targetingPreviousRow","getFirstNotHiddenIndex","isBeforeRenderedRows","isBeforeRenderedColumns","_this$hot2","rootWindow","wt","view","wtTable","wtOverlays","wtViewport","scrollableElement","getCell","cellOffset","lastColWidth","getStretchedColumnWidth","lastRowHeight","cellTopOffset","top","cellLeftOffset","left","hasVerticalScroll","topOverlay","getScrollPosition","hasHorizontalScroll","leftOverlay","x","y","commentStyle","readOnly","setSize","width","height","resetSize","setReadOnlyState","setPosition","checkSelectionCommentsConsistency","selected","getSelectedRangeLast","hasComment","cell","getTopLeftCorner","metaObject","oldComment","newComment","cellMeta","eventCell","coordinates","getCoords","priv","isFocused","elementFromPoint","clientX","clientY","commentedCellClassName","currentWidth","currentHeight","onContextMenuAddComment","coords","cancelHiding","highlight","deselectCell","focus","onContextMenuRemoveComment","_this4","forAll","onContextMenuMakeReadOnly","_this5","currentState","defaultOptions","_this6","isThereAnyCellRendered","getRenderableIndexesLength","items","push","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_EDIT_COMMENT","CONTEXTMENU_ITEMS_ADD_COMMENT","callback","disabled","getSelectedLast","selection","isSelectedByCorner","CONTEXTMENU_ITEMS_REMOVE_COMMENT","_this7","label","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","hasProperty","readOnlyProperty","commentSetting","displayDelay","destroy"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { CellCoords, CellRange } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  var _super = _createSuper(Comments);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var _this$range$from = this.range.from,\n          row = _this$range$from.row,\n          col = _this$range$from.col;\n\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var _this$hot = this.hot,\n          rowIndexMapper = _this$hot.rowIndexMapper,\n          columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n          visualRow = _this$range$from2.row,\n          visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn); // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n\n      var targetingPreviousRow = renderableRow === null;\n\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getFirstNotHiddenIndex(visualRow, -1));\n      }\n\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getFirstNotHiddenIndex(visualColumn, -1));\n      }\n\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n          rootWindow = _this$hot2.rootWindow,\n          wt = _this$hot2.view.wt;\n      var wtTable = wt.wtTable,\n          wtOverlays = wt.wtOverlays,\n          wtViewport = wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      });\n      var cellOffset = offset(TD);\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var cellTopOffset = cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset + lastRowHeight;\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      var readOnly = this.getCommentMeta(visualRow, visualColumn, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.getTopLeftCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.targetIsCellWithComment(event)) {\n        var range = new CellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}