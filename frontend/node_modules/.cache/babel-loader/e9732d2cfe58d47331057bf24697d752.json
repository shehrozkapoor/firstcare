{"ast":null,"code":"import { mapState, mapActions, mapMutations } from 'vuex';\nexport default {\n  name: \"CustomAutoComplete\",\n  props: ['placeholder', 'selectedPatient'],\n  methods: { ...mapActions(['getSpecificPatient', 'getAllPatientAppointment']),\n    ...mapMutations(['changeAppointmentDropdownStatus']),\n\n    searchItems(event) {\n      let query = event.query;\n      let filteredItems = [];\n      this.getSpecificPatient(query);\n      setTimeout(() => {\n        for (let i = 0; i < this.patients.length; i++) {\n          let item = this.patients[i];\n\n          if (item.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n            filteredItems.push(item);\n          }\n        }\n\n        this.filteredItems = filteredItems;\n      }, 2000);\n    }\n\n  },\n  computed: { ...mapState(['patients'])\n  },\n\n  data() {\n    return {\n      filteredItems: null,\n      selectedItem: null\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAKA,SAAQA,QAAR,EAAiBC,UAAjB,EAA4BC,YAA5B,QAA+C,MAA/C;AAEA,eAAe;AACXC,MAAI,EAAC,oBADM;AAEXC,OAAK,EAAC,CAAC,aAAD,EAAe,iBAAf,CAFK;AAGdC,SAAO,EAAE,EACF,GAAGJ,UAAU,CAAC,CAAC,oBAAD,EAAsB,0BAAtB,CAAD,CADX;AAEF,OAAGC,YAAY,CAAC,CAAC,iCAAD,CAAD,CAFb;;AAGRI,eAAW,CAACC,KAAD,EAAQ;AACT,UAAIC,KAAI,GAAID,KAAK,CAACC,KAAlB;AACA,UAAIC,aAAY,GAAI,EAApB;AACA,WAAKC,kBAAL,CAAwBF,KAAxB;AACAG,gBAAU,CAAC,MAAI;AACX,aAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,KAAKC,QAAL,CAAcC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC9C,cAAIG,IAAG,GAAI,KAAKF,QAAL,CAAcD,CAAd,CAAX;;AACA,cAAIG,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2BT,KAAK,CAACQ,WAAN,EAA3B,MAAoD,CAAxD,EAA2D;AACvDP,yBAAa,CAACS,IAAd,CAAmBH,IAAnB;AACJ;AACJ;;AACA,aAAKN,aAAL,GAAqBA,aAArB;AACC,OARS,EAQR,IARQ,CAAV;AASH;;AAhBC,GAHK;AAqBXU,UAAQ,EAAC,EACL,GAAGnB,QAAQ,CAAC,CAAC,UAAD,CAAD;AADN,GArBE;;AAwBXoB,MAAI,GAAG;AACH,WAAO;AACHX,mBAAa,EAAE,IADZ;AAEHY,kBAAY,EAAE;AAFX,KAAP;AAIJ;;AA7BW,CAAf","names":["mapState","mapActions","mapMutations","name","props","methods","searchItems","event","query","filteredItems","getSpecificPatient","setTimeout","i","patients","length","item","toLowerCase","indexOf","push","computed","data","selectedItem"],"sourceRoot":"","sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/src/components/Custom/CustomAutoComplete.vue"],"sourcesContent":["<template>\n    <AutoComplete v-model=\"selectedPatient\" :suggestions=\"filteredItems\" @complete=\"searchItems($event)\" :placeholder=\"placeholder\" class=\"w-full\" @item-select=\"getAllPatientAppointment(selectedItem)\" :dropdown=\"true\"/>\n</template>\n\n<script>\nimport {mapState,mapActions,mapMutations} from 'vuex'\n\nexport default {\n    name:\"CustomAutoComplete\",\n    props:['placeholder','selectedPatient'],\n\tmethods: {\n        ...mapActions(['getSpecificPatient','getAllPatientAppointment']),\n        ...mapMutations(['changeAppointmentDropdownStatus']),\n\t\tsearchItems(event) {\n            let query = event.query;\n            let filteredItems = [];\n            this.getSpecificPatient(query);\n            setTimeout(()=>{\n                for(let i = 0; i < this.patients.length; i++) {\n                let item = this.patients[i];\n                if (item.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n            this.filteredItems = filteredItems;\n            },2000)\n        },\n\t},\n    computed:{\n        ...mapState(['patients'])\n    },\n    data() {\n        return {\n            filteredItems: null,\n            selectedItem: null,\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}