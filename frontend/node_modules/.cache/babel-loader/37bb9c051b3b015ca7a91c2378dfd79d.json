{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VIcon.css\"; // Composables\n\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useIcon } from \"../../composables/icons.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from \"../../util/index.mjs\"; // Types\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: {\n    type: [String, Object]\n  },\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'i'\n  }),\n  ...makeThemeProps()\n}, 'v-icon');\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n  props: makeVIconProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    let slotIcon;\n\n    if (slots.default) {\n      slotIcon = computed(() => {\n        var _slots$default, _flattenFragments$fil;\n\n        const slot = (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots);\n        if (!slot) return;\n        return (_flattenFragments$fil = flattenFragments(slot).filter(node => node.children && typeof node.children === 'string')[0]) == null ? void 0 : _flattenFragments$fil.children;\n      });\n    }\n\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      iconData\n    } = useIcon(slotIcon || props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    return () => {\n      return _createVNode(iconData.value.component, {\n        \"tag\": props.tag,\n        \"icon\": iconData.value.icon,\n        \"class\": ['v-icon', 'notranslate', sizeClasses.value, textColorClasses.value, themeClasses.value, {\n          'v-icon--start': props.start,\n          'v-icon--end': props.end\n        }],\n        \"style\": [!sizeClasses.value ? {\n          fontSize: convertToUnit(props.size),\n          width: convertToUnit(props.size),\n          height: convertToUnit(props.size)\n        } : undefined, textColorStyles.value],\n        \"aria-hidden\": \"true\"\n      }, null);\n    };\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,qB,CAEA;;SACSA,eAAeC,e;SACfC,oB;SACAC,e;SACAC,oB;SACAC,gBAAgBC,oB,+BAEzB;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,eAAeC,iBAAiBC,kBAAkBC,oB,wBAE3D;;AAIA,OAAO,MAAMC,cAAc,GAAGD,YAAY,CAAC;AACzCE,OAAK,EAAEC,MADkC;AAEzCC,OAAK,EAAEC,OAFkC;AAGzCC,KAAG,EAAED,OAHoC;AAIzCE,MAAI,EAAE;AACJC,QAAI,EAAE,CAACL,MAAD,EAASM,MAAT;AADF,GAJmC;AAQzC,KAAGrB,aAAa,EARyB;AASzC,KAAGE,YAAY,CAAC;AAAEoB,OAAG,EAAE;AAAP,GAAD,CAT0B;AAUzC,KAAGjB,cAAc;AAVwB,CAAD,EAWvC,QAXuC,CAAnC;AAaP,OAAO,MAAMkB,KAAK,GAAGb,eAAe,CAAC;AACnCc,MAAI,EAAE,OAD6B;AAGnCC,OAAK,EAAEZ,cAAc,EAHc;;AAKnCa,OAAK,CAAED,KAAF,QAAoB;AAAA,QAAX;AAAEE;AAAF,QAAWC;AACvB,QAAIC,QAAJ;;AACA,QAAIF,KAAK,CAACG,OAAV,EAAmB;AACjBD,cAAQ,GAAGtB,QAAQ,CAAC,MAAM;AAAA;;AACxB,cAAMwB,IAAI,qBAAGJ,KAAK,CAACG,OAAT,qBAAGE,0BAAb;AACA,YAAI,CAACD,IAAL,EAAW;AAEX,wCAAOpB,gBAAgB,CAACoB,IAAD,CAAhBpB,CAAuBsB,MAAvBtB,CAA8BuB,IAAI,IACvCA,IAAI,CAACC,QAALD,IAAiB,OAAOA,IAAI,CAACC,QAAZ,KAAyB,QADrCxB,EAEL,CAFKA,CAAP,qBAAOyB,sBAEDD,QAFN;AAJiB,QAAnBN;AAQD;;AAED,UAAM;AAAEQ;AAAF,QAAmB/B,YAAY,CAACmB,KAAD,CAArC;AACA,UAAM;AAAEa;AAAF,QAAenC,OAAO,CAAC0B,QAAQ,IAAIJ,KAAb,CAA5B;AACA,UAAM;AAAEc;AAAF,QAAkBtC,OAAO,CAACwB,KAAD,CAA/B;AACA,UAAM;AAAEe,sBAAF;AAAoBC;AAApB,QAAwCrC,YAAY,CAACI,KAAK,CAACiB,KAAD,EAAQ,OAAR,CAAN,CAA1D;AAEA,WAAO,MAAM;AACX;AAAA,eAEUA,KAAK,CAACH,GAFhB;AAAA,gBAGWgB,QAAQ,CAACI,KAATJ,CAAenB,IAH1B;AAAA,iBAIW,CACL,QADK,EAEL,aAFK,EAGLoB,WAAW,CAACG,KAHP,EAILF,gBAAgB,CAACE,KAJZ,EAKLL,YAAY,CAACK,KALR,EAML;AACE,2BAAiBjB,KAAK,CAACT,KADzB;AAEE,yBAAeS,KAAK,CAACP;AAFvB,SANK,CAJX;AAAA,iBAeW,CACL,CAACqB,WAAW,CAACG,KAAb,GAAsB;AACpBC,kBAAQ,EAAElC,aAAa,CAACgB,KAAK,CAACmB,IAAP,CADH;AAEpBC,eAAK,EAAEpC,aAAa,CAACgB,KAAK,CAACmB,IAAP,CAFA;AAGpBE,gBAAM,EAAErC,aAAa,CAACgB,KAAK,CAACmB,IAAP;AAHD,SAAtB,GAIKG,SALA,EAMLN,eAAe,CAACC,KANX,CAfX;AAAA,uBAuBgB;AAvBhB;AADF;AA4BD;;AAnDkC,CAAD,CAA7B","names":["makeSizeProps","useSize","makeTagProps","useIcon","useTextColor","makeThemeProps","provideTheme","computed","toRef","convertToUnit","defineComponent","flattenFragments","propsFactory","makeVIconProps","color","String","start","Boolean","end","icon","type","Object","tag","VIcon","name","props","setup","slots","_ref","slotIcon","default","slot","_slots$default","filter","node","children","_flattenFragments$fil","themeClasses","iconData","sizeClasses","textColorClasses","textColorStyles","value","fontSize","size","width","height","undefined"],"sources":["../../../src/components/VIcon/VIcon.tsx"],"sourcesContent":["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { useIcon } from '@/composables/icons'\nimport { useTextColor } from '@/composables/color'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { ComputedRef, PropType } from 'vue'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: {\n    type: [String, Object] as PropType<IconValue>,\n  },\n\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'v-icon')\n\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            sizeClasses.value,\n            textColorClasses.value,\n            themeClasses.value,\n            {\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n          ]}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}