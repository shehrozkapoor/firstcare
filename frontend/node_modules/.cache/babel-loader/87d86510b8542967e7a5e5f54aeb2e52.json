{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VNavigationDrawer.css\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useDisplay } from \"../../composables/display.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRouter } from \"../../composables/router.mjs\";\nimport { useTouch } from \"./touch.mjs\"; // Utilities\n\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue';\nimport { convertToUnit, defineComponent } from \"../../util/index.mjs\"; // Types\n\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 72\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256\n    },\n    position: {\n      type: String,\n      default: 'left',\n      validator: value => ['left', 'right', 'bottom'].includes(value)\n    },\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({\n      tag: 'nav'\n    }),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      mobile\n    } = useDisplay();\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const router = useRouter();\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v);\n    const isHovering = ref(false);\n    const width = computed(() => {\n      return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);\n    });\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary));\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val));\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false));\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true;\n    });\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return;\n      isActive.value = props.permanent || !mobile.value;\n    });\n    const rootEl = ref();\n    const {\n      isDragging,\n      dragProgress,\n      dragStyles\n    } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: toRef(props, 'position')\n    });\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;\n      return isDragging.value ? size * dragProgress.value : size;\n    });\n    const {\n      layoutItemStyles,\n      layoutRect,\n      layoutItemScrimStyles\n    } = useLayoutItem({\n      id: props.name,\n      priority: computed(() => parseInt(props.priority, 10)),\n      position: toRef(props, 'position'),\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: toRef(props, 'absolute')\n    });\n    const scrimStyles = computed(() => ({ ...(isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none'\n      } : undefined),\n      ...(layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom)\n      } : undefined),\n      ...layoutItemScrimStyles.value\n    }));\n    return () => {\n      var _slots$image, _slots$prepend, _slots$default, _slots$append;\n\n      const hasImage = slots.image || props.image;\n      return _createVNode(_Fragment, null, [_createVNode(props.tag, _mergeProps({\n        \"ref\": rootEl,\n        \"onMouseenter\": () => isHovering.value = true,\n        \"onMouseleave\": () => isHovering.value = false,\n        \"class\": ['v-navigation-drawer', {\n          'v-navigation-drawer--bottom': props.position === 'bottom',\n          'v-navigation-drawer--end': props.position === 'right',\n          'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n          'v-navigation-drawer--floating': props.floating,\n          'v-navigation-drawer--is-hovering': isHovering.value,\n          'v-navigation-drawer--rail': props.rail,\n          'v-navigation-drawer--start': props.position === 'left',\n          'v-navigation-drawer--temporary': isTemporary.value,\n          'v-navigation-drawer--active': isActive.value\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, dragStyles.value]\n      }, attrs), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__img\"\n        }, [slots.image ? (_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots, {\n          image: props.image\n        }) : _createVNode(\"img\", {\n          \"src\": props.image,\n          \"alt\": \"\"\n        }, null)]), slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__prepend\"\n        }, [(_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)]), _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__content\"\n        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__append\"\n        }, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)])]\n      }), _createVNode(Transition, {\n        \"name\": \"fade-transition\"\n      }, {\n        default: () => [isTemporary.value && (isDragging.value || isActive.value) && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__scrim\",\n          \"style\": scrimStyles.value,\n          \"onClick\": () => isActive.value = false\n        }, null)]\n      })]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"qGAAA;;AACA,iC,CAEA;;SACSA,iBAAiBC,iB;SACjBC,oBAAoBC,oB;SACpBC,qBAAqBC,qB;SACrBC,kBAAkBC,kB;SAClBC,oB;SACAC,gBAAgBC,oB;SAChBC,0B;SACAC,kB;SACAC,uB;SACAC,iB;SACAC,gB,eAET;;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8CC,UAA9C,EAA0DC,KAA1D,QAAuE,KAAvE;SACSC,eAAeC,uB,wBAExB;;AAGA,OAAO,MAAMC,iBAAiB,GAAGD,eAAe,CAAC;AAC/CE,MAAI,EAAE,mBADyC;AAG/CC,OAAK,EAAE;AACLC,SAAK,EAAEC,MADF;AAELC,wBAAoB,EAAEC,OAFjB;AAGLC,uBAAmB,EAAED,OAHhB;AAILE,iBAAa,EAAEF,OAJV;AAKLG,YAAQ,EAAEH,OALL;AAMLI,cAAU,EAAE;AACVC,UAAI,EAAEL,OADI;AAEVM,aAAO,EAAE;AAFC,KANP;AAULC,aAAS,EAAEP,OAVN;AAWLQ,QAAI,EAAER,OAXD;AAYLS,aAAS,EAAE;AACTJ,UAAI,EAAE,CAACK,MAAD,EAASZ,MAAT,CADG;AAETQ,aAAO,EAAE;AAFA,KAZN;AAgBLK,SAAK,EAAEb,MAhBF;AAiBLc,aAAS,EAAEZ,OAjBN;AAkBLa,aAAS,EAAEb,OAlBN;AAmBLc,SAAK,EAAE;AACLT,UAAI,EAAE,CAACK,MAAD,EAASZ,MAAT,CADD;AAELQ,aAAO,EAAE;AAFJ,KAnBF;AAuBLS,YAAQ,EAAE;AACRV,UAAI,EAAEP,MADE;AAERQ,aAAO,EAAE,MAFD;AAGRU,eAAS,EAAGC,KAAD,IAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4BC,QAA5B,CAAqCD,KAArC;AAHnB,KAvBL;AA6BL,OAAG/C,eAAe,EA7Bb;AA8BL,OAAGE,kBAAkB,EA9BhB;AA+BL,OAAGE,mBAAmB,EA/BjB;AAgCL,OAAGE,gBAAgB,EAhCd;AAiCL,OAAGE,YAAY,CAAC;AAAEyC,SAAG,EAAE;AAAP,KAAD,CAjCV;AAkCL,OAAGxC,cAAc;AAlCZ,GAHwC;AAwC/CyC,OAAK,EAAE;AACL,yBAAsBC,GAAD,IAAkB;AADlC,GAxCwC;;AA4C/CC,OAAK,CAAE1B,KAAF,QAA2B;AAAA,QAAlB;AAAE2B,WAAF;AAASC;AAAT,QAAkBC;AAC9B,UAAM;AAAEC;AAAF,QAAmB9C,YAAY,CAACgB,KAAD,CAArC;AACA,UAAM;AAAE+B;AAAF,QAAoBxD,SAAS,CAACyB,KAAD,CAAnC;AACA,UAAM;AAAEgC,4BAAF;AAA0BC;AAA1B,QAAoDhD,kBAAkB,CAACQ,KAAK,CAACO,KAAD,EAAQ,OAAR,CAAN,CAA5E;AACA,UAAM;AAAEkC;AAAF,QAAuBzD,YAAY,CAACuB,KAAD,CAAzC;AACA,UAAM;AAAEmC;AAAF,QAAajD,UAAU,EAA7B;AACA,UAAM;AAAEkD;AAAF,QAAqBvD,UAAU,CAACmB,KAAD,CAArC;AACA,UAAMqC,MAAM,GAAGjD,SAAS,EAAxB;AACA,UAAMkD,QAAQ,GAAGnD,eAAe,CAACa,KAAD,EAAQ,YAAR,EAAsB,IAAtB,EAA4BuC,CAAC,IAAI,CAAC,CAACA,CAAnC,CAAhC;AACA,UAAMC,UAAU,GAAGhD,GAAG,CAAC,KAAD,CAAtB;AACA,UAAM0B,KAAK,GAAG5B,QAAQ,CAAC,MAAM;AAC3B,aAAQU,KAAK,CAACY,IAANZ,IAAcA,KAAK,CAACM,aAApBN,IAAqCwC,UAAU,CAACnB,KAAhDrB,GACJc,MAAM,CAACd,KAAK,CAACkB,KAAP,CADFlB,GAEJc,MAAM,CAACd,KAAK,CAACY,IAANZ,GAAaA,KAAK,CAACa,SAAnBb,GAA+BA,KAAK,CAACkB,KAAtC,CAFV;AADoB,MAAtB;AAKA,UAAMuB,WAAW,GAAGnD,QAAQ,CAAC,MAAM,CAACU,KAAK,CAACW,SAAP,KAAqBwB,MAAM,CAACd,KAAPc,IAAgBnC,KAAK,CAACgB,SAA3C,CAAP,CAA5B;;AAEA,QAAI,CAAChB,KAAK,CAACG,oBAAX,EAAiC;AAC/BR,WAAK,CAAC8C,WAAD,EAAchB,GAAG,IAAI,CAACzB,KAAK,CAACW,SAAP,KAAqB2B,QAAQ,CAACjB,KAATiB,GAAiB,CAACb,GAAvC,CAArB,CAAL9B;AACD;;AAED,QAAI,CAACK,KAAK,CAACK,mBAAP,IAA8BgC,MAAlC,EAA0C;AACxC1C,WAAK,CAAC0C,MAAM,CAACK,YAAR,EAAsB,MAAMD,WAAW,CAACpB,KAAZoB,KAAsBH,QAAQ,CAACjB,KAATiB,GAAiB,KAAvCG,CAA5B,CAAL9C;AACD;;AAEDA,SAAK,CAAC,MAAMK,KAAK,CAACW,SAAb,EAAwBc,GAAG,IAAI;AAClC,UAAIA,GAAJ,EAASa,QAAQ,CAACjB,KAATiB,GAAiB,IAAjBA;AADN,MAAL3C;AAIAJ,iBAAa,CAAC,MAAM;AAClB,UAAIS,KAAK,CAACQ,UAANR,IAAoB,IAApBA,IAA4ByC,WAAW,CAACpB,KAA5C,EAAmD;AAEnDiB,cAAQ,CAACjB,KAATiB,GAAiBtC,KAAK,CAACW,SAANX,IAAmB,CAACmC,MAAM,CAACd,KAA5CiB;AAHW,MAAb/C;AAMA,UAAMoD,MAAM,GAAGnD,GAAG,EAAlB;AAEA,UAAM;AAAEoD,gBAAF;AAAcC,kBAAd;AAA4BC;AAA5B,QAA2CzD,QAAQ,CAAC;AACxDiD,cADwD;AAExDG,iBAFwD;AAGxDvB,WAHwD;AAIxDD,eAAS,EAAExB,KAAK,CAACO,KAAD,EAAQ,WAAR,CAJwC;AAKxDmB,cAAQ,EAAE1B,KAAK,CAACO,KAAD,EAAQ,UAAR;AALyC,KAAD,CAAzD;AAQA,UAAM+C,UAAU,GAAGzD,QAAQ,CAAC,MAAM;AAChC,YAAM0D,IAAI,GAAGP,WAAW,CAACpB,KAAZoB,GAAoB,CAApBA,GACTzC,KAAK,CAACY,IAANZ,IAAcA,KAAK,CAACM,aAApBN,GAAoCc,MAAM,CAACd,KAAK,CAACa,SAAP,CAA1Cb,GACAkB,KAAK,CAACG,KAFV;AAIA,aAAOuB,UAAU,CAACvB,KAAXuB,GAAmBI,IAAI,GAAGH,YAAY,CAACxB,KAAvCuB,GAA+CI,IAAtD;AALyB,MAA3B;AAOA,UAAM;AAAEC,sBAAF;AAAoBC,gBAApB;AAAgCC;AAAhC,QAA0DxE,aAAa,CAAC;AAC5EyE,QAAE,EAAEpD,KAAK,CAACD,IADkE;AAE5EsD,cAAQ,EAAE/D,QAAQ,CAAC,MAAMgE,QAAQ,CAACtD,KAAK,CAACqD,QAAP,EAAiB,EAAjB,CAAf,CAF0D;AAG5ElC,cAAQ,EAAE1B,KAAK,CAACO,KAAD,EAAQ,UAAR,CAH6D;AAI5E+C,gBAJ4E;AAK5EQ,iBAAW,EAAErC,KAL+D;AAM5EsC,YAAM,EAAElE,QAAQ,CAAC,MAAMgD,QAAQ,CAACjB,KAATiB,IAAkBM,UAAU,CAACvB,KAApC,CAN4D;AAO5EoC,wBAAkB,EAAEnE,QAAQ,CAAC,MAAMsD,UAAU,CAACvB,KAAlB,CAPgD;AAQ5EqC,cAAQ,EAAEjE,KAAK,CAACO,KAAD,EAAQ,UAAR;AAR6D,KAAD,CAA7E;AAWA,UAAM2D,WAAW,GAAGrE,QAAQ,CAAC,OAAO,EAClC,IAAGsD,UAAU,CAACvB,KAAXuB,GAAmB;AACpBgB,eAAO,EAAEf,YAAY,CAACxB,KAAbwB,GAAqB,GADV;AAEpBgB,kBAAU,EAAE;AAFQ,OAAnBjB,GAGCkB,SAHJ,CADkC;AAKlC,UAAGZ,UAAU,CAAC7B,KAAX6B,GAAmB;AACpBa,YAAI,EAAEnE,aAAa,CAACsD,UAAU,CAAC7B,KAAX6B,CAAiBa,IAAlB,CADC;AAEpBC,aAAK,EAAEpE,aAAa,CAACsD,UAAU,CAAC7B,KAAX6B,CAAiBc,KAAlB,CAFA;AAGpBC,WAAG,EAAErE,aAAa,CAACsD,UAAU,CAAC7B,KAAX6B,CAAiBe,GAAlB,CAHE;AAIpBC,cAAM,EAAEtE,aAAa,CAACsD,UAAU,CAAC7B,KAAX6B,CAAiBgB,MAAlB;AAJD,OAAnBhB,GAKCY,SALJ,CALkC;AAWlC,SAAGX,qBAAqB,CAAC9B;AAXS,KAAP,CAAD,CAA5B;AAcA,WAAO,MAAM;AAAA;;AACX,YAAM8C,QAAQ,GAAIvC,KAAK,CAACb,KAANa,IAAe5B,KAAK,CAACe,KAAvC;AAEA;AAAA,eAGY4B,MAHZ;AAAA,wBAIqB,MAAOH,UAAU,CAACnB,KAAXmB,GAAmB,IAJ/C;AAAA,wBAKqB,MAAOA,UAAU,CAACnB,KAAXmB,GAAmB,KAL/C;AAAA,iBAMa,CACL,qBADK,EAEL;AACE,yCAA+BxC,KAAK,CAACmB,QAANnB,KAAmB,QADpD;AAEE,sCAA4BA,KAAK,CAACmB,QAANnB,KAAmB,OAFjD;AAGE,kDAAwCA,KAAK,CAACM,aAHhD;AAIE,2CAAiCN,KAAK,CAACO,QAJzC;AAKE,8CAAoCiC,UAAU,CAACnB,KALjD;AAME,uCAA6BrB,KAAK,CAACY,IANrC;AAOE,wCAA8BZ,KAAK,CAACmB,QAANnB,KAAmB,MAPnD;AAQE,4CAAkCyC,WAAW,CAACpB,KARhD;AASE,yCAA+BiB,QAAQ,CAACjB;AAT1C,SAFK,EAaLS,YAAY,CAACT,KAbR,EAcLW,sBAAsB,CAACX,KAdlB,EAeLU,aAAa,CAACV,KAfT,EAgBLa,gBAAgB,CAACb,KAhBZ,EAiBLe,cAAc,CAACf,KAjBV,CANb;AAAA,iBAyBa,CACLY,qBAAqB,CAACZ,KADjB,EAEL4B,gBAAgB,CAAC5B,KAFZ,EAGLyB,UAAU,CAACzB,KAHN;AAzBb,SA8BWM,KA9BX;AAAAjB,wBAgCQyD,QAAQ;AAAA,mBACG;AADH,YAEJvC,KAAK,CAACb,KAANa,mBACEA,KAAK,CAACb,KADR,qBACEqD,yBAAc;AAAErD,eAAK,EAAEf,KAAK,CAACe;AAAf,SAAd,CADFa;AAAA,iBAEc5B,KAAK,CAACe,KAFpB;AAAA,iBAEgC;AAFhC,gBAFI,EAhChB,EAyCQa,KAAK,CAACyC,OAANzC;AAAA,mBACW;AADX,8BAEIA,KAAK,CAACyC,OAFV,qBAEIC,0BAFJ,EAzCR;AAAA,mBA+CiB;AA/CjB,8BAgDU1C,KAAK,CAAClB,OAhDhB,qBAgDU6D,0BAhDV,IAmDQ3C,KAAK,CAAC4C,MAAN5C;AAAA,mBACW;AADX,6BAEIA,KAAK,CAAC4C,MAFV,qBAEIC,yBAFJ,EAnDR;AAAA;AAAA,gBA0DqB;AA1DrB;AAAA/D,wBA2DQ+B,WAAW,CAACpB,KAAZoB,KAAsBG,UAAU,CAACvB,KAAXuB,IAAoBN,QAAQ,CAACjB,KAAnDoB;AAAA,mBAEQ,4BAFR;AAAA,mBAGUkB,WAAW,CAACtC,KAHtB;AAAA,qBAIY,MAAMiB,QAAQ,CAACjB,KAATiB,GAAiB;AAJnC,gBA3DR;AAAA;AAHF;AAyED;;AAlM8C,CAAD,CAAzC","names":["makeBorderProps","useBorder","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useBackgroundColor","useDisplay","useProxiedModel","useRouter","useTouch","computed","onBeforeMount","ref","toRef","Transition","watch","convertToUnit","defineComponent","VNavigationDrawer","name","props","color","String","disableResizeWatcher","Boolean","disableRouteWatcher","expandOnHover","floating","modelValue","type","default","permanent","rail","railWidth","Number","image","temporary","touchless","width","position","validator","value","includes","tag","emits","val","setup","attrs","slots","_ref","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","mobile","roundedClasses","router","isActive","v","isHovering","isTemporary","currentRoute","rootEl","isDragging","dragProgress","dragStyles","layoutSize","size","layoutItemStyles","layoutRect","layoutItemScrimStyles","id","priority","parseInt","elementSize","active","disableTransitions","absolute","scrimStyles","opacity","transition","undefined","left","right","top","bottom","hasImage","_slots$image","prepend","_slots$prepend","_slots$default","append","_slots$append"],"sources":["../../../src/components/VNavigationDrawer/VNavigationDrawer.tsx"],"sourcesContent":["// Styles\nimport './VNavigationDrawer.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useDisplay } from '@/composables/display'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRouter } from '@/composables/router'\nimport { useTouch } from './touch'\n\n// Utilities\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 72,\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    position: {\n      type: String as PropType<'left' | 'right' | 'bottom'>,\n      default: 'left',\n      validator: (value: any) => ['left', 'right', 'bottom'].includes(value),\n    },\n\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'nav' }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { mobile } = useDisplay()\n    const { roundedClasses } = useRounded(props)\n    const router = useRouter()\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v)\n    const isHovering = ref(false)\n    const width = computed(() => {\n      return (props.rail && props.expandOnHover && isHovering.value)\n        ? Number(props.width)\n        : Number(props.rail ? props.railWidth : props.width)\n    })\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary))\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val))\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false))\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true\n    })\n\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return\n\n      isActive.value = props.permanent || !mobile.value\n    })\n\n    const rootEl = ref<HTMLElement>()\n\n    const { isDragging, dragProgress, dragStyles } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: toRef(props, 'position'),\n    })\n\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0\n        : props.rail && props.expandOnHover ? Number(props.railWidth)\n        : width.value\n\n      return isDragging.value ? size * dragProgress.value : size\n    })\n    const { layoutItemStyles, layoutRect, layoutItemScrimStyles } = useLayoutItem({\n      id: props.name,\n      priority: computed(() => parseInt(props.priority, 10)),\n      position: toRef(props, 'position'),\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    const scrimStyles = computed(() => ({\n      ...isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none',\n      } : undefined,\n      ...layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom),\n      } : undefined,\n      ...layoutItemScrimStyles.value,\n    }))\n\n    return () => {\n      const hasImage = (slots.image || props.image)\n\n      return (\n        <>\n          <props.tag\n            ref={ rootEl }\n            onMouseenter={ () => (isHovering.value = true) }\n            onMouseleave={ () => (isHovering.value = false) }\n            class={[\n              'v-navigation-drawer',\n              {\n                'v-navigation-drawer--bottom': props.position === 'bottom',\n                'v-navigation-drawer--end': props.position === 'right',\n                'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n                'v-navigation-drawer--floating': props.floating,\n                'v-navigation-drawer--is-hovering': isHovering.value,\n                'v-navigation-drawer--rail': props.rail,\n                'v-navigation-drawer--start': props.position === 'left',\n                'v-navigation-drawer--temporary': isTemporary.value,\n                'v-navigation-drawer--active': isActive.value,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              borderClasses.value,\n              elevationClasses.value,\n              roundedClasses.value,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              layoutItemStyles.value,\n              dragStyles.value,\n            ]}\n            { ...attrs }\n          >\n            { hasImage && (\n              <div class=\"v-navigation-drawer__img\">\n                { slots.image\n                  ? slots.image?.({ image: props.image })\n                  : (<img src={ props.image } alt=\"\" />)\n                }\n              </div>\n            )}\n\n            { slots.prepend && (\n              <div class=\"v-navigation-drawer__prepend\">\n                { slots.prepend?.() }\n              </div>\n            )}\n\n            <div class=\"v-navigation-drawer__content\">\n              { slots.default?.() }\n            </div>\n\n            { slots.append && (\n              <div class=\"v-navigation-drawer__append\">\n                { slots.append?.() }\n              </div>\n            )}\n          </props.tag>\n\n          <Transition name=\"fade-transition\">\n            { isTemporary.value && (isDragging.value || isActive.value) && (\n              <div\n                class=\"v-navigation-drawer__scrim\"\n                style={ scrimStyles.value }\n                onClick={ () => isActive.value = false }\n              />\n            )}\n          </Transition>\n        </>\n      )\n    }\n  },\n})\n\nexport type VNavigationDrawer = InstanceType<typeof VNavigationDrawer>\n"]},"metadata":{},"sourceType":"module"}