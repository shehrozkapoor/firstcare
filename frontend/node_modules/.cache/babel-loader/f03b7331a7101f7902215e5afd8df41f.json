{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Utilities\nimport { computed, inject, provide, ref, watch, watchEffect } from 'vue';\nimport { colorToInt, colorToRGB, createRange, darken, getCurrentInstance, getLuma, IN_BROWSER, intToHex, lighten, mergeDeep, propsFactory } from \"../util/index.mjs\";\nimport { APCAcontrast } from \"../util/color/APCA.mjs\"; // Types\n\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\nconst defaultThemeOptions = {\n  defaultTheme: 'light',\n  variations: {\n    colors: [],\n    lighten: 0,\n    darken: 0\n  },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        'surface-variant': '#424242',\n        'on-surface-variant': '#EEEEEE',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.12,\n        'dragged-opacity': 0.08,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#C2C2C2'\n      }\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        'surface-variant': '#BDBDBD',\n        'on-surface-variant': '#424242',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.16,\n        'dragged-opacity': 0.08,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#B7B7B7'\n      }\n    }\n  }\n};\n\nconst parseThemeOptions = function () {\n  var _options$themes;\n\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultThemeOptions;\n  if (!options) return { ...defaultThemeOptions,\n    isDisabled: true\n  };\n  const themes = Object.entries((_options$themes = options.themes) != null ? _options$themes : {}).reduce((obj, _ref) => {\n    var _defaultThemeOptions$, _defaultThemeOptions$2;\n\n    let [key, theme] = _ref;\n    const defaultTheme = theme.dark ? (_defaultThemeOptions$ = defaultThemeOptions.themes) == null ? void 0 : _defaultThemeOptions$.dark : (_defaultThemeOptions$2 = defaultThemeOptions.themes) == null ? void 0 : _defaultThemeOptions$2.light;\n    obj[key] = mergeDeep(defaultTheme, theme);\n    return obj;\n  }, {});\n  return mergeDeep(defaultThemeOptions, { ...options,\n    themes\n  });\n}; // Composables\n\n\nexport function createTheme(app, options) {\n  const head = app._context.provides.usehead;\n  const parsedOptions = parseThemeOptions(options);\n  const styleEl = ref();\n  const current = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const variations = ref(parsedOptions.variations);\n  const computedThemes = computed(() => {\n    return Object.entries(themes.value).reduce((obj, _ref2) => {\n      var _parsedOptions$variat;\n\n      let [name, original] = _ref2;\n      const theme = { ...original,\n        colors: { ...original.colors,\n          ...((_parsedOptions$variat = parsedOptions.variations.colors) != null ? _parsedOptions$variat : []).reduce((obj, color) => {\n            return { ...obj,\n              ...genColorVariations(color, original.colors[color])\n            };\n          }, {})\n        }\n      };\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = colorToInt(theme.colors[color]);\n        const blackContrast = Math.abs(APCAcontrast(0, colorVal));\n        const whiteContrast = Math.abs(APCAcontrast(0xffffff, colorVal)); // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n        // Prefer white text if both have an acceptable contrast ratio\n\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000';\n      }\n\n      obj[name] = theme;\n      return obj;\n    }, {});\n  });\n\n  function genColorVariations(name, color) {\n    const obj = {};\n\n    for (const variation of ['lighten', 'darken']) {\n      const fn = variation === 'lighten' ? lighten : darken;\n\n      for (const amount of createRange(variations.value[variation], 1)) {\n        obj[`${name}-${variation}-${amount}`] = intToHex(fn(colorToInt(color), amount));\n      }\n    }\n\n    return obj;\n  }\n\n  const styles = computed(() => {\n    const lines = [];\n\n    for (const themeName of Object.keys(computedThemes.value)) {\n      const variables = computedThemes.value[themeName].variables;\n      lines.push(...createCssClass(`.v-theme--${themeName}`, [...genCssVariables(themeName), ...Object.keys(variables).map(key => {\n        const value = variables[key];\n        const color = typeof value === 'string' && value.startsWith('#') ? colorToRGB(value) : undefined;\n        const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n        return `--v-${key}: ${rgb != null ? rgb : value}`;\n      })]));\n    }\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n\n    for (const key of colors) {\n      if (/on-[a-z]/.test(key)) {\n        lines.push(...createCssClass(`.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]));\n      } else {\n        lines.push(...createCssClass(`.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]), ...createCssClass(`.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]), ...createCssClass(`.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]));\n      }\n    }\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n\n  function genCssVariables(name) {\n    const theme = computedThemes.value[name];\n    if (!theme) throw new Error(`Could not find theme ${name}`);\n    const lightOverlay = theme.dark ? 2 : 1;\n    const darkOverlay = theme.dark ? 1 : 2;\n    const variables = [];\n\n    for (const [key, value] of Object.entries(theme.colors)) {\n      const rgb = colorToRGB(value);\n      variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n\n      if (!key.startsWith('on-')) {\n        variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n      }\n    }\n\n    return variables;\n  }\n\n  function createCssClass(selector, content) {\n    return [`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n'];\n  }\n\n  if (head) {\n    head.addHeadObjs(computed(() => ({\n      style: [{\n        children: styles.value,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet'\n      }]\n    })));\n\n    if (IN_BROWSER) {\n      watchEffect(() => head.updateDOM());\n    }\n  } else {\n    watch(themes, updateStyles, {\n      deep: true,\n      immediate: true\n    });\n\n    function updateStyles() {\n      if (parsedOptions.isDisabled) return;\n      genStyleElement();\n      if (styleEl.value) styleEl.value.innerHTML = styles.value;\n    }\n\n    function genStyleElement() {\n      if (typeof document === 'undefined' || styleEl.value) return;\n      const el = document.createElement('style');\n      el.type = 'text/css';\n      el.id = 'vuetify-theme-stylesheet';\n      styleEl.value = el;\n      document.head.appendChild(styleEl.value);\n    }\n  }\n\n  return {\n    isDisabled: parsedOptions.isDisabled,\n    themes: computedThemes,\n    setTheme: (key, theme) => themes.value[key] = theme,\n    getTheme: key => computedThemes.value[key],\n    current,\n    themeClasses: computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${current.value}`),\n    styles\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const current = computed(() => {\n    var _props$theme;\n\n    return (_props$theme = props.theme) != null ? _props$theme : theme == null ? void 0 : theme.current.value;\n  });\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${current.value}`);\n  const newTheme = { ...theme,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}","map":{"version":3,"mappings":"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","names":["computed","inject","provide","ref","watch","watchEffect","colorToInt","colorToRGB","createRange","darken","getCurrentInstance","getLuma","IN_BROWSER","intToHex","lighten","mergeDeep","propsFactory","APCAcontrast","ThemeSymbol","Symbol","for","makeThemeProps","theme","String","defaultThemeOptions","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","parseThemeOptions","options","isDisabled","Object","entries","reduce","obj","key","_ref","_defaultThemeOptions$","_defaultThemeOptions$2","createTheme","app","head","_context","provides","usehead","parsedOptions","styleEl","current","computedThemes","value","name","original","_ref2","color","genColorVariations","keys","test","onColor","colorVal","blackContrast","Math","abs","whiteContrast","min","variation","fn","amount","styles","lines","themeName","push","createCssClass","genCssVariables","map","startsWith","undefined","rgb","r","g","b","Set","values","flatMap","str","i","join","Error","lightOverlay","darkOverlay","selector","content","line","addHeadObjs","style","children","type","id","updateDOM","updateStyles","deep","immediate","genStyleElement","innerHTML","document","el","createElement","appendChild","setTheme","getTheme","themeClasses","provideTheme","props","newTheme","useTheme"],"sources":["../../src/composables/theme.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, ref, watch, watchEffect } from 'vue'\nimport {\n  colorToInt,\n  colorToRGB,\n  createRange,\n  darken,\n  getCurrentInstance,\n  getLuma,\n  IN_BROWSER,\n  intToHex,\n  lighten,\n  mergeDeep,\n  propsFactory,\n} from '@/util'\nimport { APCAcontrast } from '@/util/color/APCA'\n\n// Types\nimport type { App, InjectionKey, Ref } from 'vue'\nimport type { HeadClient } from '@vueuse/head'\n\ntype DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\nexport interface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeOptions {\n  isDisabled: boolean\n  defaultTheme: string\n  variations: VariationsOptions\n  themes: Record<string, InternalThemeDefinition>\n}\n\nexport type ThemeDefinition = DeepPartial<InternalThemeDefinition>\n\nexport type ThemeOptions = false | {\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n}\n\nexport interface ThemeInstance {\n  isDisabled: boolean\n  themes: Ref<Record<string, InternalThemeDefinition>>\n  current: Ref<string>\n  themeClasses: Ref<string | undefined>\n  setTheme: (key: string, theme: InternalThemeDefinition) => void\n  getTheme: (key: string) => InternalThemeDefinition\n  styles: Ref<string>\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nconst defaultThemeOptions: ThemeOptions = {\n  defaultTheme: 'light',\n  variations: { colors: [], lighten: 0, darken: 0 },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        'surface-variant': '#424242',\n        'on-surface-variant': '#EEEEEE',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.12,\n        'dragged-opacity': 0.08,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#C2C2C2',\n      },\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        'surface-variant': '#BDBDBD',\n        'on-surface-variant': '#424242',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.16,\n        'dragged-opacity': 0.08,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#B7B7B7',\n      },\n    },\n  },\n}\n\nconst parseThemeOptions = (options: ThemeOptions = defaultThemeOptions): InternalThemeOptions => {\n  if (!options) return { ...defaultThemeOptions, isDisabled: true } as InternalThemeOptions\n\n  const themes = Object.entries(options.themes ?? {}).reduce((obj, [key, theme]) => {\n    const defaultTheme = theme.dark ? defaultThemeOptions.themes?.dark : defaultThemeOptions.themes?.light\n    obj[key] = mergeDeep(defaultTheme, theme)\n    return obj\n  }, {} as Record<string, ThemeDefinition>)\n\n  return mergeDeep(\n    defaultThemeOptions,\n    { ...options, themes },\n  ) as InternalThemeOptions\n}\n\n// Composables\nexport function createTheme (app: App, options?: ThemeOptions): ThemeInstance {\n  const head = app._context.provides.usehead as HeadClient | undefined\n  const parsedOptions = parseThemeOptions(options)\n  const styleEl = ref<HTMLStyleElement>()\n  const current = ref(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n  const variations = ref(parsedOptions.variations)\n\n  const computedThemes = computed(() => {\n    return Object.entries(themes.value).reduce((obj, [name, original]) => {\n      const theme: InternalThemeDefinition = {\n        ...original,\n        colors: {\n          ...original.colors,\n          ...(parsedOptions.variations.colors ?? []).reduce((obj, color) => {\n            return { ...obj, ...genColorVariations(color, original.colors[color]!) }\n          }, {}),\n        },\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue\n\n        const onColor = `on-${color}` as keyof OnColors\n        const colorVal = colorToInt(theme.colors[color]!)\n\n        const blackContrast = Math.abs(APCAcontrast(0, colorVal))\n        const whiteContrast = Math.abs(APCAcontrast(0xffffff, colorVal))\n\n        // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n\n        // Prefer white text if both have an acceptable contrast ratio\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000'\n      }\n\n      obj[name] = theme\n\n      return obj\n    }, {} as Record<string, InternalThemeDefinition>)\n  })\n\n  function genColorVariations (name: string, color: string) {\n    const obj: Record<string, string> = {}\n    for (const variation of (['lighten', 'darken'] as const)) {\n      const fn = variation === 'lighten' ? lighten : darken\n      for (const amount of createRange(variations.value[variation], 1)) {\n        obj[`${name}-${variation}-${amount}`] = intToHex(fn(colorToInt(color), amount))\n      }\n    }\n\n    return obj\n  }\n\n  const styles = computed(() => {\n    const lines = []\n\n    for (const themeName of Object.keys(computedThemes.value)) {\n      const variables = computedThemes.value[themeName].variables\n\n      lines.push(...createCssClass(`.v-theme--${themeName}`, [\n        ...genCssVariables(themeName),\n        ...Object.keys(variables).map(key => {\n          const value = variables[key]\n          const color = typeof value === 'string' && value.startsWith('#') ? colorToRGB(value) : undefined\n          const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n\n          return `--v-${key}: ${rgb ?? value}`\n        }),\n      ]))\n    }\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)))\n    for (const key of colors) {\n      if (/on-[a-z]/.test(key)) {\n        lines.push(...createCssClass(`.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]))\n      } else {\n        lines.push(\n          ...createCssClass(`.bg-${key}`, [\n            `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n            `background: rgb(var(--v-theme-${key})) !important`,\n            `color: rgb(var(--v-theme-on-${key})) !important`,\n          ]),\n          ...createCssClass(`.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]),\n          ...createCssClass(`.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]),\n        )\n      }\n    }\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  })\n\n  function genCssVariables (name: string) {\n    const theme = computedThemes.value[name]\n\n    if (!theme) throw new Error(`Could not find theme ${name}`)\n\n    const lightOverlay = theme.dark ? 2 : 1\n    const darkOverlay = theme.dark ? 1 : 2\n\n    const variables: string[] = []\n    for (const [key, value] of Object.entries(theme.colors)) {\n      const rgb = colorToRGB(value!)\n      variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n      if (!key.startsWith('on-')) {\n        variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n      }\n    }\n\n    return variables\n  }\n\n  function createCssClass (selector: string, content: string[]) {\n    return [\n      `${selector} {\\n`,\n      ...content.map(line => `  ${line};\\n`),\n      '}\\n',\n    ]\n  }\n\n  if (head) {\n    head.addHeadObjs(computed(() => ({\n      style: [{\n        children: styles.value,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n      }],\n    })))\n\n    if (IN_BROWSER) {\n      watchEffect(() => head.updateDOM())\n    }\n  } else {\n    watch(themes, updateStyles, { deep: true, immediate: true })\n\n    function updateStyles () {\n      if (parsedOptions.isDisabled) return\n\n      genStyleElement()\n\n      if (styleEl.value) styleEl.value.innerHTML = styles.value\n    }\n\n    function genStyleElement () {\n      if (typeof document === 'undefined' || styleEl.value) return\n\n      const el = document.createElement('style')\n      el.type = 'text/css'\n      el.id = 'vuetify-theme-stylesheet'\n\n      styleEl.value = el\n      document.head.appendChild(styleEl.value)\n    }\n  }\n\n  return {\n    isDisabled: parsedOptions.isDisabled,\n    themes: computedThemes,\n    setTheme: (key: string, theme: InternalThemeDefinition) => themes.value[key] = theme,\n    getTheme: (key: string) => computedThemes.value[key],\n    current,\n    themeClasses: computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${current.value}`),\n    styles,\n  }\n}\n\nexport function provideTheme (props: { theme?: string }) {\n  getCurrentInstance('provideTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const current = computed<string>(() => {\n    return props.theme ?? theme?.current.value\n  })\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${current.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    current,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n\nexport function useTheme () {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n"]},"metadata":{},"sourceType":"module"}