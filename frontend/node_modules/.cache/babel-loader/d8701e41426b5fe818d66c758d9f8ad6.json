{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar fast_diff_1 = __importDefault(require(\"fast-diff\"));\n\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\n\nvar lodash_isequal_1 = __importDefault(require(\"lodash.isequal\"));\n\nvar AttributeMap_1 = __importDefault(require(\"./AttributeMap\"));\n\nvar Op_1 = __importDefault(require(\"./Op\"));\n\nvar NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n\nvar Delta =\n/** @class */\nfunction () {\n  function Delta(ops) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n\n  Delta.prototype.insert = function (arg, attributes) {\n    var newOp = {};\n\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n\n    newOp.insert = arg;\n\n    if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n\n    return this.push(newOp);\n  };\n\n  Delta.prototype.delete = function (length) {\n    if (length <= 0) {\n      return this;\n    }\n\n    return this.push({\n      delete: length\n    });\n  };\n\n  Delta.prototype.retain = function (length, attributes) {\n    if (length <= 0) {\n      return this;\n    }\n\n    var newOp = {\n      retain: length\n    };\n\n    if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n\n    return this.push(newOp);\n  };\n\n  Delta.prototype.push = function (newOp) {\n    var index = this.ops.length;\n    var lastOp = this.ops[index - 1];\n    newOp = lodash_clonedeep_1.default(newOp);\n\n    if (typeof lastOp === 'object') {\n      if (typeof newOp.delete === 'number' && typeof lastOp.delete === 'number') {\n        this.ops[index - 1] = {\n          delete: lastOp.delete + newOp.delete\n        };\n        return this;\n      } // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n\n\n      if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n\n        if (typeof lastOp !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n\n      if (lodash_isequal_1.default(newOp.attributes, lastOp.attributes)) {\n        if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {\n          this.ops[index - 1] = {\n            insert: lastOp.insert + newOp.insert\n          };\n\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n\n          return this;\n        } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {\n          this.ops[index - 1] = {\n            retain: lastOp.retain + newOp.retain\n          };\n\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n\n          return this;\n        }\n      }\n    }\n\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n\n    return this;\n  };\n\n  Delta.prototype.chop = function () {\n    var lastOp = this.ops[this.ops.length - 1];\n\n    if (lastOp && lastOp.retain && !lastOp.attributes) {\n      this.ops.pop();\n    }\n\n    return this;\n  };\n\n  Delta.prototype.filter = function (predicate) {\n    return this.ops.filter(predicate);\n  };\n\n  Delta.prototype.forEach = function (predicate) {\n    this.ops.forEach(predicate);\n  };\n\n  Delta.prototype.map = function (predicate) {\n    return this.ops.map(predicate);\n  };\n\n  Delta.prototype.partition = function (predicate) {\n    var passed = [];\n    var failed = [];\n    this.forEach(function (op) {\n      var target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  };\n\n  Delta.prototype.reduce = function (predicate, initialValue) {\n    return this.ops.reduce(predicate, initialValue);\n  };\n\n  Delta.prototype.changeLength = function () {\n    return this.reduce(function (length, elem) {\n      if (elem.insert) {\n        return length + Op_1.default.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n\n      return length;\n    }, 0);\n  };\n\n  Delta.prototype.length = function () {\n    return this.reduce(function (length, elem) {\n      return length + Op_1.default.length(elem);\n    }, 0);\n  };\n\n  Delta.prototype.slice = function (start, end) {\n    if (start === void 0) {\n      start = 0;\n    }\n\n    if (end === void 0) {\n      end = Infinity;\n    }\n\n    var ops = [];\n    var iter = Op_1.default.iterator(this.ops);\n    var index = 0;\n\n    while (index < end && iter.hasNext()) {\n      var nextOp = void 0;\n\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n\n      index += Op_1.default.length(nextOp);\n    }\n\n    return new Delta(ops);\n  };\n\n  Delta.prototype.compose = function (other) {\n    var thisIter = Op_1.default.iterator(this.ops);\n    var otherIter = Op_1.default.iterator(other.ops);\n    var ops = [];\n    var firstOther = otherIter.peek();\n\n    if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {\n      var firstLeft = firstOther.retain;\n\n      while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n\n    var delta = new Delta(ops);\n\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        var length_1 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        var thisOp = thisIter.next(length_1);\n        var otherOp = otherIter.next(length_1);\n\n        if (typeof otherOp.retain === 'number') {\n          var newOp = {};\n\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain = length_1;\n          } else {\n            newOp.insert = thisOp.insert;\n          } // Preserve null when composing with a retain, otherwise remove it for inserts\n\n\n          var attributes = AttributeMap_1.default.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');\n\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n\n          delta.push(newOp); // Optimization if rest of other is just retain\n\n          if (!otherIter.hasNext() && lodash_isequal_1.default(delta.ops[delta.ops.length - 1], newOp)) {\n            var rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          } // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n\n        } else if (typeof otherOp.delete === 'number' && typeof thisOp.retain === 'number') {\n          delta.push(otherOp);\n        }\n      }\n    }\n\n    return delta.chop();\n  };\n\n  Delta.prototype.concat = function (other) {\n    var delta = new Delta(this.ops.slice());\n\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n\n    return delta;\n  };\n\n  Delta.prototype.diff = function (other, cursor) {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n\n    var strings = [this, other].map(function (delta) {\n      return delta.map(function (op) {\n        if (op.insert != null) {\n          return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n        }\n\n        var prep = delta === other ? 'on' : 'with';\n        throw new Error('diff() called ' + prep + ' non-document');\n      }).join('');\n    });\n    var retDelta = new Delta();\n    var diffResult = fast_diff_1.default(strings[0], strings[1], cursor);\n    var thisIter = Op_1.default.iterator(this.ops);\n    var otherIter = Op_1.default.iterator(other.ops);\n    diffResult.forEach(function (component) {\n      var length = component[1].length;\n\n      while (length > 0) {\n        var opLength = 0;\n\n        switch (component[0]) {\n          case fast_diff_1.default.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n\n          case fast_diff_1.default.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n\n          case fast_diff_1.default.EQUAL:\n            opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n            var thisOp = thisIter.next(opLength);\n            var otherOp = otherIter.next(opLength);\n\n            if (lodash_isequal_1.default(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(opLength, AttributeMap_1.default.diff(thisOp.attributes, otherOp.attributes));\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n\n            break;\n        }\n\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  };\n\n  Delta.prototype.eachLine = function (predicate, newline) {\n    if (newline === void 0) {\n      newline = '\\n';\n    }\n\n    var iter = Op_1.default.iterator(this.ops);\n    var line = new Delta();\n    var i = 0;\n\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n\n      var thisOp = iter.peek();\n      var start = Op_1.default.length(thisOp) - iter.peekLength();\n      var index = typeof thisOp.insert === 'string' ? thisOp.insert.indexOf(newline, start) - start : -1;\n\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n\n        i += 1;\n        line = new Delta();\n      }\n    }\n\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  };\n\n  Delta.prototype.invert = function (base) {\n    var inverted = new Delta();\n    this.reduce(function (baseIndex, op) {\n      if (op.insert) {\n        inverted.delete(Op_1.default.length(op));\n      } else if (op.retain && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || op.retain && op.attributes) {\n        var length_2 = op.delete || op.retain;\n        var slice = base.slice(baseIndex, baseIndex + length_2);\n        slice.forEach(function (baseOp) {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(Op_1.default.length(baseOp), AttributeMap_1.default.invert(op.attributes, baseOp.attributes));\n          }\n        });\n        return baseIndex + length_2;\n      }\n\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  };\n\n  Delta.prototype.transform = function (arg, priority) {\n    if (priority === void 0) {\n      priority = false;\n    }\n\n    priority = !!priority;\n\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n\n    var other = arg;\n    var thisIter = Op_1.default.iterator(this.ops);\n    var otherIter = Op_1.default.iterator(other.ops);\n    var delta = new Delta();\n\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {\n        delta.retain(Op_1.default.length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        var length_3 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        var thisOp = thisIter.next(length_3);\n        var otherOp = otherIter.next(length_3);\n\n        if (thisOp.delete) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          // We retain either their retain or insert\n          delta.retain(length_3, AttributeMap_1.default.transform(thisOp.attributes, otherOp.attributes, priority));\n        }\n      }\n    }\n\n    return delta.chop();\n  };\n\n  Delta.prototype.transformPosition = function (index, priority) {\n    if (priority === void 0) {\n      priority = false;\n    }\n\n    priority = !!priority;\n    var thisIter = Op_1.default.iterator(this.ops);\n    var offset = 0;\n\n    while (thisIter.hasNext() && offset <= index) {\n      var length_4 = thisIter.peekLength();\n      var nextType = thisIter.peekType();\n      thisIter.next();\n\n      if (nextType === 'delete') {\n        index -= Math.min(length_4, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length_4;\n      }\n\n      offset += length_4;\n    }\n\n    return index;\n  };\n\n  Delta.Op = Op_1.default;\n  Delta.AttributeMap = AttributeMap_1.default;\n  return Delta;\n}();\n\nmodule.exports = Delta;","map":{"version":3,"mappings":"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","names":["NULL_CHARACTER","String","fromCharCode","ops","Array","isArray","Delta","arg","attributes","newOp","length","insert","Object","keys","push","delete","retain","index","lastOp","lodash_clonedeep_1","unshift","lodash_isequal_1","splice","pop","predicate","filter","forEach","map","passed","failed","op","target","initialValue","reduce","elem","Op_1","start","end","iter","iterator","hasNext","nextOp","next","other","thisIter","otherIter","firstOther","peek","firstLeft","peekType","peekLength","delta","length_1","Math","min","thisOp","otherOp","AttributeMap_1","compose","rest","concat","chop","slice","cursor","strings","prep","Error","join","retDelta","diffResult","fast_diff_1","component","opLength","INSERT","DELETE","EQUAL","diff","newline","line","i","indexOf","base","inverted","baseIndex","length_2","baseOp","invert","priority","transformPosition","length_3","transform","offset","length_4","nextType","module"],"sourceRoot":"","sources":["../src/Delta.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}