{"ast":null,"code":"import { defineComponent, markRaw, openBlock, createElementBlock, renderSlot } from 'vue';\nimport Handsontable from 'handsontable/base';\nvar unassignedPropSymbol = Symbol('unassigned');\n/**\r\n * Message for the warning thrown if the Handsontable instance has been destroyed.\r\n */\n\nvar HOT_DESTROYED_WARNING = 'The Handsontable instance bound to this component was destroyed and cannot be' + ' used properly.';\n/**\r\n * Check if at specified `key` there is any value for `object`.\r\n *\r\n * @param {object} object Object to search value at specyfic key.\r\n * @param {string} key String key to check.\r\n * @returns {boolean}\r\n */\n\nfunction hasOwnProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\r\n * Generate an object containing all the available Handsontable properties and plugin hooks.\r\n *\r\n * @param {string} source Source for the factory (either 'HotTable' or 'HotColumn').\r\n * @returns {object}\r\n */\n\n\nfunction propFactory(source) {\n  var registeredHooks = Handsontable.hooks.getRegistered();\n  var propSchema = {};\n  Object.assign(propSchema, Handsontable.DefaultSettings); // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n  for (var prop in propSchema) {\n    propSchema[prop] = {\n      \"default\": unassignedPropSymbol\n    };\n  }\n\n  for (var i = 0; i < registeredHooks.length; i++) {\n    propSchema[registeredHooks[i]] = {\n      \"default\": unassignedPropSymbol\n    };\n  }\n\n  propSchema.settings = {\n    \"default\": unassignedPropSymbol\n  };\n\n  if (source === 'HotTable') {\n    propSchema.id = {\n      type: String,\n      \"default\": \"hot-\".concat(Math.random().toString(36).substring(5))\n    };\n  }\n\n  return propSchema;\n}\n/**\r\n * Filter out all of the unassigned props, and return only the one passed to the component.\r\n *\r\n * @param {object} props Object containing all the possible props.\r\n * @returns {object} Object containing only used props.\r\n */\n\n\nfunction filterPassedProps(props) {\n  var filteredProps = {};\n  var columnSettingsProp = props.settings;\n\n  if (columnSettingsProp !== unassignedPropSymbol) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (var propName in columnSettingsProp) {\n      if (hasOwnProperty(columnSettingsProp, propName) && columnSettingsProp[propName] !== unassignedPropSymbol) {\n        filteredProps[propName] = columnSettingsProp[propName];\n      }\n    }\n  } // eslint-disable-next-line no-restricted-syntax\n\n\n  for (var _propName in props) {\n    if (hasOwnProperty(props, _propName) && _propName !== 'settings' && props[_propName] !== unassignedPropSymbol) {\n      filteredProps[_propName] = props[_propName];\n    }\n  }\n\n  return filteredProps;\n}\n/**\r\n * Prepare the settings object to be used as the settings for Handsontable, based on the props provided to the component.\r\n *\r\n * @param {HotTableProps} props The props passed to the component.\r\n * @param {Handsontable.GridSettings} currentSettings The current Handsontable settings.\r\n * @returns {Handsontable.GridSettings} An object containing the properties, ready to be used within Handsontable.\r\n */\n\n\nfunction prepareSettings(props, currentSettings) {\n  var assignedProps = filterPassedProps(props);\n  var hotSettingsInProps = props.settings ? props.settings : assignedProps;\n  var additionalHotSettingsInProps = props.settings ? assignedProps : null;\n  var newSettings = {}; // eslint-disable-next-line no-restricted-syntax\n\n  for (var key in hotSettingsInProps) {\n    if (hasOwnProperty(hotSettingsInProps, key) && hotSettingsInProps[key] !== void 0 && (currentSettings && key !== 'data' ? !simpleEqual(currentSettings[key], hotSettingsInProps[key]) : true)) {\n      newSettings[key] = hotSettingsInProps[key];\n    }\n  } // eslint-disable-next-line no-restricted-syntax\n\n\n  for (var _key in additionalHotSettingsInProps) {\n    if (hasOwnProperty(additionalHotSettingsInProps, _key) && _key !== 'id' && _key !== 'settings' && additionalHotSettingsInProps[_key] !== void 0 && (currentSettings && _key !== 'data' ? !simpleEqual(currentSettings[_key], additionalHotSettingsInProps[_key]) : true)) {\n      newSettings[_key] = additionalHotSettingsInProps[_key];\n    }\n  }\n\n  return newSettings;\n}\n/**\r\n * Compare two objects using `JSON.stringify`.\r\n * *Note: * As it's using the stringify function to compare objects, the property order in both objects is\r\n * important. It will return `false` for the same objects, if they're defined in a different order.\r\n *\r\n * @param {object} objectA First object to compare.\r\n * @param {object} objectB Second object to compare.\r\n * @returns {boolean} `true` if they're the same, `false` otherwise.\r\n */\n\n\nfunction simpleEqual(objectA, objectB) {\n  return JSON.stringify(objectA) === JSON.stringify(objectB);\n}\n\nvar version = \"11.1.0\";\nvar HotTable = defineComponent({\n  name: 'HotTable',\n  props: propFactory('HotTable'),\n  provide: function provide() {\n    return {\n      columnsCache: this.columnsCache\n    };\n  },\n  watch: {\n    $props: {\n      handler: function handler(props) {\n        var settings = prepareSettings(props, this.hotInstance ? this.hotInstance.getSettings() : void 0);\n\n        if (!this.hotInstance || settings === void 0) {\n          return;\n        }\n\n        if (settings.data) {\n          if (this.hotInstance.isColumnModificationAllowed() || !this.hotInstance.isColumnModificationAllowed() && this.hotInstance.countSourceCols() === this.miscCache.currentSourceColumns) {\n            // If the dataset dimensions change, update the index mappers.\n            this.matchHotMappersSize(); // Data is automatically synchronized by reference.\n\n            delete settings.data;\n          }\n        } // If there are another options changed, update the HOT settings, render the table otherwise.\n\n\n        if (Object.keys(settings).length) {\n          this.hotInstance.updateSettings(settings);\n        } else {\n          this.hotInstance.render();\n        }\n\n        this.miscCache.currentSourceColumns = this.hotInstance.countSourceCols();\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  data: function data() {\n    return {\n      /* eslint-disable vue/no-reserved-keys */\n      __hotInstance: null,\n\n      /* eslint-enable vue/no-reserved-keys */\n      miscCache: {\n        currentSourceColumns: null\n      },\n      columnSettings: null,\n      columnsCache: new Map(),\n\n      get hotInstance() {\n        if (!this.__hotInstance || this.__hotInstance && !this.__hotInstance.isDestroyed) {\n          // Will return the Handsontable instance or `null` if it's not yet been created.\n          return this.__hotInstance;\n        } else {\n          /* eslint-disable-next-line no-console */\n          console.warn(HOT_DESTROYED_WARNING);\n          return null;\n        }\n      },\n\n      set hotInstance(hotInstance) {\n        this.__hotInstance = hotInstance;\n      }\n\n    };\n  },\n  methods: {\n    /**\r\n     * Initialize Handsontable.\r\n     */\n    hotInit: function hotInit() {\n      var newSettings = prepareSettings(this.$props);\n      newSettings.columns = this.columnSettings ? this.columnSettings : newSettings.columns;\n      this.hotInstance = markRaw(new Handsontable.Core(this.$el, newSettings));\n      this.hotInstance.init();\n      this.miscCache.currentSourceColumns = this.hotInstance.countSourceCols();\n    },\n    matchHotMappersSize: function matchHotMappersSize() {\n      var _this = this;\n\n      if (!this.hotInstance) {\n        return;\n      }\n\n      var data = this.hotInstance.getSourceData();\n      var rowsToRemove = [];\n      var columnsToRemove = [];\n      var indexMapperRowCount = this.hotInstance.rowIndexMapper.getNumberOfIndexes();\n      var isColumnModificationAllowed = this.hotInstance.isColumnModificationAllowed();\n      var indexMapperColumnCount = 0;\n\n      if (data && data.length !== indexMapperRowCount) {\n        if (data.length < indexMapperRowCount) {\n          for (var r = data.length; r < indexMapperRowCount; r++) {\n            rowsToRemove.push(r);\n          }\n        }\n      }\n\n      if (isColumnModificationAllowed) {\n        var _data$;\n\n        indexMapperColumnCount = this.hotInstance.columnIndexMapper.getNumberOfIndexes();\n\n        if (data && data[0] && ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.length) !== indexMapperColumnCount) {\n          if (data[0].length < indexMapperColumnCount) {\n            for (var c = data[0].length; c < indexMapperColumnCount; c++) {\n              columnsToRemove.push(c);\n            }\n          }\n        }\n      }\n\n      this.hotInstance.batch(function () {\n        if (rowsToRemove.length > 0) {\n          _this.hotInstance.rowIndexMapper.removeIndexes(rowsToRemove);\n        } else {\n          _this.hotInstance.rowIndexMapper.insertIndexes(indexMapperRowCount - 1, data.length - indexMapperRowCount);\n        }\n\n        if (isColumnModificationAllowed && data.length !== 0) {\n          if (columnsToRemove.length > 0) {\n            _this.hotInstance.columnIndexMapper.removeIndexes(columnsToRemove);\n          } else {\n            _this.hotInstance.columnIndexMapper.insertIndexes(indexMapperColumnCount - 1, data[0].length - indexMapperColumnCount);\n          }\n        }\n      });\n    },\n\n    /**\r\n     * Get settings for the columns provided in the `hot-column` components.\r\n     *\r\n     * @returns {HotTableProps[] | undefined}\r\n     */\n    getColumnSettings: function getColumnSettings() {\n      var columnSettings = Array.from(this.columnsCache.values());\n      return columnSettings.length ? columnSettings : void 0;\n    }\n  },\n  mounted: function mounted() {\n    this.columnSettings = this.getColumnSettings();\n    this.hotInit();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.hotInstance) {\n      this.hotInstance.destroy();\n    }\n  },\n  version: version\n});\nvar _hoisted_1 = [\"id\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    id: _ctx.id\n  }, [renderSlot(_ctx.$slots, \"default\")], 8\n  /* PROPS */\n  , _hoisted_1);\n}\n\nHotTable.render = render;\nHotTable.__file = \"src/HotTable.vue\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar HotColumn = defineComponent({\n  name: 'HotColumn',\n  props: propFactory('HotColumn'),\n  inject: ['columnsCache'],\n  methods: {\n    /**\r\n     * Create the column settings based on the data provided to the `hot-column`\r\n     * component and it's child components.\r\n     */\n    createColumnSettings: function createColumnSettings() {\n      var assignedProps = filterPassedProps(this.$props);\n\n      var columnSettings = _objectSpread2({}, assignedProps);\n\n      if (assignedProps.renderer) {\n        columnSettings.renderer = assignedProps.renderer;\n      }\n\n      if (assignedProps.editor) {\n        columnSettings.editor = assignedProps.editor;\n      }\n\n      this.columnsCache.set(this, columnSettings);\n    }\n  },\n  mounted: function mounted() {\n    this.createColumnSettings();\n  },\n  unmounted: function unmounted() {\n    this.columnsCache[\"delete\"](this);\n  },\n  render: function render() {\n    return null;\n  }\n});\nHotColumn.__file = \"src/HotColumn.vue\";\nexport { HotColumn, HotTable, HotTable as default };","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/FIRST_CARE/firstcare-frontend/node_modules/@handsontable/vue3/es/vue-handsontable.js"],"names":["defineComponent","markRaw","openBlock","createElementBlock","renderSlot","Handsontable","unassignedPropSymbol","Symbol","HOT_DESTROYED_WARNING","hasOwnProperty","object","key","Object","prototype","call","propFactory","source","registeredHooks","hooks","getRegistered","propSchema","assign","DefaultSettings","prop","i","length","settings","id","type","String","concat","Math","random","toString","substring","filterPassedProps","props","filteredProps","columnSettingsProp","propName","_propName","prepareSettings","currentSettings","assignedProps","hotSettingsInProps","additionalHotSettingsInProps","newSettings","simpleEqual","_key","objectA","objectB","JSON","stringify","version","HotTable","name","provide","columnsCache","watch","$props","handler","hotInstance","getSettings","data","isColumnModificationAllowed","countSourceCols","miscCache","currentSourceColumns","matchHotMappersSize","keys","updateSettings","render","deep","immediate","__hotInstance","columnSettings","Map","isDestroyed","console","warn","methods","hotInit","columns","Core","$el","init","_this","getSourceData","rowsToRemove","columnsToRemove","indexMapperRowCount","rowIndexMapper","getNumberOfIndexes","indexMapperColumnCount","r","push","_data$","columnIndexMapper","c","batch","removeIndexes","insertIndexes","getColumnSettings","Array","from","values","mounted","beforeUnmount","destroy","_hoisted_1","_ctx","_cache","$setup","$data","$options","$slots","__file","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","HotColumn","inject","createColumnSettings","renderer","editor","set","unmounted","default"],"mappings":"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","sourcesContent":["import { defineComponent, markRaw, openBlock, createElementBlock, renderSlot } from 'vue';\nimport Handsontable from 'handsontable/base';\n\nvar unassignedPropSymbol = Symbol('unassigned');\n/**\r\n * Message for the warning thrown if the Handsontable instance has been destroyed.\r\n */\n\nvar HOT_DESTROYED_WARNING = 'The Handsontable instance bound to this component was destroyed and cannot be' + ' used properly.';\n/**\r\n * Check if at specified `key` there is any value for `object`.\r\n *\r\n * @param {object} object Object to search value at specyfic key.\r\n * @param {string} key String key to check.\r\n * @returns {boolean}\r\n */\n\nfunction hasOwnProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\r\n * Generate an object containing all the available Handsontable properties and plugin hooks.\r\n *\r\n * @param {string} source Source for the factory (either 'HotTable' or 'HotColumn').\r\n * @returns {object}\r\n */\n\nfunction propFactory(source) {\n  var registeredHooks = Handsontable.hooks.getRegistered();\n  var propSchema = {};\n  Object.assign(propSchema, Handsontable.DefaultSettings); // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n  for (var prop in propSchema) {\n    propSchema[prop] = {\n      \"default\": unassignedPropSymbol\n    };\n  }\n\n  for (var i = 0; i < registeredHooks.length; i++) {\n    propSchema[registeredHooks[i]] = {\n      \"default\": unassignedPropSymbol\n    };\n  }\n\n  propSchema.settings = {\n    \"default\": unassignedPropSymbol\n  };\n\n  if (source === 'HotTable') {\n    propSchema.id = {\n      type: String,\n      \"default\": \"hot-\".concat(Math.random().toString(36).substring(5))\n    };\n  }\n\n  return propSchema;\n}\n/**\r\n * Filter out all of the unassigned props, and return only the one passed to the component.\r\n *\r\n * @param {object} props Object containing all the possible props.\r\n * @returns {object} Object containing only used props.\r\n */\n\nfunction filterPassedProps(props) {\n  var filteredProps = {};\n  var columnSettingsProp = props.settings;\n\n  if (columnSettingsProp !== unassignedPropSymbol) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (var propName in columnSettingsProp) {\n      if (hasOwnProperty(columnSettingsProp, propName) && columnSettingsProp[propName] !== unassignedPropSymbol) {\n        filteredProps[propName] = columnSettingsProp[propName];\n      }\n    }\n  } // eslint-disable-next-line no-restricted-syntax\n\n\n  for (var _propName in props) {\n    if (hasOwnProperty(props, _propName) && _propName !== 'settings' && props[_propName] !== unassignedPropSymbol) {\n      filteredProps[_propName] = props[_propName];\n    }\n  }\n\n  return filteredProps;\n}\n/**\r\n * Prepare the settings object to be used as the settings for Handsontable, based on the props provided to the component.\r\n *\r\n * @param {HotTableProps} props The props passed to the component.\r\n * @param {Handsontable.GridSettings} currentSettings The current Handsontable settings.\r\n * @returns {Handsontable.GridSettings} An object containing the properties, ready to be used within Handsontable.\r\n */\n\nfunction prepareSettings(props, currentSettings) {\n  var assignedProps = filterPassedProps(props);\n  var hotSettingsInProps = props.settings ? props.settings : assignedProps;\n  var additionalHotSettingsInProps = props.settings ? assignedProps : null;\n  var newSettings = {}; // eslint-disable-next-line no-restricted-syntax\n\n  for (var key in hotSettingsInProps) {\n    if (hasOwnProperty(hotSettingsInProps, key) && hotSettingsInProps[key] !== void 0 && (currentSettings && key !== 'data' ? !simpleEqual(currentSettings[key], hotSettingsInProps[key]) : true)) {\n      newSettings[key] = hotSettingsInProps[key];\n    }\n  } // eslint-disable-next-line no-restricted-syntax\n\n\n  for (var _key in additionalHotSettingsInProps) {\n    if (hasOwnProperty(additionalHotSettingsInProps, _key) && _key !== 'id' && _key !== 'settings' && additionalHotSettingsInProps[_key] !== void 0 && (currentSettings && _key !== 'data' ? !simpleEqual(currentSettings[_key], additionalHotSettingsInProps[_key]) : true)) {\n      newSettings[_key] = additionalHotSettingsInProps[_key];\n    }\n  }\n\n  return newSettings;\n}\n/**\r\n * Compare two objects using `JSON.stringify`.\r\n * *Note: * As it's using the stringify function to compare objects, the property order in both objects is\r\n * important. It will return `false` for the same objects, if they're defined in a different order.\r\n *\r\n * @param {object} objectA First object to compare.\r\n * @param {object} objectB Second object to compare.\r\n * @returns {boolean} `true` if they're the same, `false` otherwise.\r\n */\n\nfunction simpleEqual(objectA, objectB) {\n  return JSON.stringify(objectA) === JSON.stringify(objectB);\n}\n\nvar version=\"11.1.0\";\n\nvar HotTable = defineComponent({\n  name: 'HotTable',\n  props: propFactory('HotTable'),\n  provide: function provide() {\n    return {\n      columnsCache: this.columnsCache\n    };\n  },\n  watch: {\n    $props: {\n      handler: function handler(props) {\n        var settings = prepareSettings(props, this.hotInstance ? this.hotInstance.getSettings() : void 0);\n\n        if (!this.hotInstance || settings === void 0) {\n          return;\n        }\n\n        if (settings.data) {\n          if (this.hotInstance.isColumnModificationAllowed() || !this.hotInstance.isColumnModificationAllowed() && this.hotInstance.countSourceCols() === this.miscCache.currentSourceColumns) {\n            // If the dataset dimensions change, update the index mappers.\n            this.matchHotMappersSize(); // Data is automatically synchronized by reference.\n\n            delete settings.data;\n          }\n        } // If there are another options changed, update the HOT settings, render the table otherwise.\n\n\n        if (Object.keys(settings).length) {\n          this.hotInstance.updateSettings(settings);\n        } else {\n          this.hotInstance.render();\n        }\n\n        this.miscCache.currentSourceColumns = this.hotInstance.countSourceCols();\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  data: function data() {\n    return {\n      /* eslint-disable vue/no-reserved-keys */\n      __hotInstance: null,\n\n      /* eslint-enable vue/no-reserved-keys */\n      miscCache: {\n        currentSourceColumns: null\n      },\n      columnSettings: null,\n      columnsCache: new Map(),\n\n      get hotInstance() {\n        if (!this.__hotInstance || this.__hotInstance && !this.__hotInstance.isDestroyed) {\n          // Will return the Handsontable instance or `null` if it's not yet been created.\n          return this.__hotInstance;\n        } else {\n          /* eslint-disable-next-line no-console */\n          console.warn(HOT_DESTROYED_WARNING);\n          return null;\n        }\n      },\n\n      set hotInstance(hotInstance) {\n        this.__hotInstance = hotInstance;\n      }\n\n    };\n  },\n  methods: {\n    /**\r\n     * Initialize Handsontable.\r\n     */\n    hotInit: function hotInit() {\n      var newSettings = prepareSettings(this.$props);\n      newSettings.columns = this.columnSettings ? this.columnSettings : newSettings.columns;\n      this.hotInstance = markRaw(new Handsontable.Core(this.$el, newSettings));\n      this.hotInstance.init();\n      this.miscCache.currentSourceColumns = this.hotInstance.countSourceCols();\n    },\n    matchHotMappersSize: function matchHotMappersSize() {\n      var _this = this;\n\n      if (!this.hotInstance) {\n        return;\n      }\n\n      var data = this.hotInstance.getSourceData();\n      var rowsToRemove = [];\n      var columnsToRemove = [];\n      var indexMapperRowCount = this.hotInstance.rowIndexMapper.getNumberOfIndexes();\n      var isColumnModificationAllowed = this.hotInstance.isColumnModificationAllowed();\n      var indexMapperColumnCount = 0;\n\n      if (data && data.length !== indexMapperRowCount) {\n        if (data.length < indexMapperRowCount) {\n          for (var r = data.length; r < indexMapperRowCount; r++) {\n            rowsToRemove.push(r);\n          }\n        }\n      }\n\n      if (isColumnModificationAllowed) {\n        var _data$;\n\n        indexMapperColumnCount = this.hotInstance.columnIndexMapper.getNumberOfIndexes();\n\n        if (data && data[0] && ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.length) !== indexMapperColumnCount) {\n          if (data[0].length < indexMapperColumnCount) {\n            for (var c = data[0].length; c < indexMapperColumnCount; c++) {\n              columnsToRemove.push(c);\n            }\n          }\n        }\n      }\n\n      this.hotInstance.batch(function () {\n        if (rowsToRemove.length > 0) {\n          _this.hotInstance.rowIndexMapper.removeIndexes(rowsToRemove);\n        } else {\n          _this.hotInstance.rowIndexMapper.insertIndexes(indexMapperRowCount - 1, data.length - indexMapperRowCount);\n        }\n\n        if (isColumnModificationAllowed && data.length !== 0) {\n          if (columnsToRemove.length > 0) {\n            _this.hotInstance.columnIndexMapper.removeIndexes(columnsToRemove);\n          } else {\n            _this.hotInstance.columnIndexMapper.insertIndexes(indexMapperColumnCount - 1, data[0].length - indexMapperColumnCount);\n          }\n        }\n      });\n    },\n\n    /**\r\n     * Get settings for the columns provided in the `hot-column` components.\r\n     *\r\n     * @returns {HotTableProps[] | undefined}\r\n     */\n    getColumnSettings: function getColumnSettings() {\n      var columnSettings = Array.from(this.columnsCache.values());\n      return columnSettings.length ? columnSettings : void 0;\n    }\n  },\n  mounted: function mounted() {\n    this.columnSettings = this.getColumnSettings();\n    this.hotInit();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.hotInstance) {\n      this.hotInstance.destroy();\n    }\n  },\n  version: version\n});\n\nvar _hoisted_1 = [\"id\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    id: _ctx.id\n  }, [renderSlot(_ctx.$slots, \"default\")], 8\n  /* PROPS */\n  , _hoisted_1);\n}\n\nHotTable.render = render;\nHotTable.__file = \"src/HotTable.vue\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar HotColumn = defineComponent({\n  name: 'HotColumn',\n  props: propFactory('HotColumn'),\n  inject: ['columnsCache'],\n  methods: {\n    /**\r\n     * Create the column settings based on the data provided to the `hot-column`\r\n     * component and it's child components.\r\n     */\n    createColumnSettings: function createColumnSettings() {\n      var assignedProps = filterPassedProps(this.$props);\n\n      var columnSettings = _objectSpread2({}, assignedProps);\n\n      if (assignedProps.renderer) {\n        columnSettings.renderer = assignedProps.renderer;\n      }\n\n      if (assignedProps.editor) {\n        columnSettings.editor = assignedProps.editor;\n      }\n\n      this.columnsCache.set(this, columnSettings);\n    }\n  },\n  mounted: function mounted() {\n    this.createColumnSettings();\n  },\n  unmounted: function unmounted() {\n    this.columnsCache[\"delete\"](this);\n  },\n  render: function render() {\n    return null;\n  }\n});\n\nHotColumn.__file = \"src/HotColumn.vue\";\n\nexport { HotColumn, HotTable, HotTable as default };\n"]},"metadata":{},"sourceType":"module"}