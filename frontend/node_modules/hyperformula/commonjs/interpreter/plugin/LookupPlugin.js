"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

require("core-js/modules/es.reflect.construct.js");

require("core-js/modules/es.symbol.js");

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.symbol.iterator.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/web.dom-collections.iterator.js");

exports.__esModule = true;
exports.LookupPlugin = void 0;

require("core-js/modules/es.array.find.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.array.map.js");

require("core-js/modules/es.object.get-prototype-of.js");

var _AbsoluteCellRange = require("../../AbsoluteCellRange");

var _Cell = require("../../Cell");

var _errorMessage = require("../../error-message");

var _RowSearchStrategy = require("../../Lookup/RowSearchStrategy");

var _statistics = require("../../statistics");

var _ArithmeticHelper = require("../ArithmeticHelper");

var _SimpleRangeValue = require("../SimpleRangeValue");

var _FunctionPlugin2 = require("./FunctionPlugin");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var LookupPlugin = /*#__PURE__*/function (_FunctionPlugin) {
  _inherits(LookupPlugin, _FunctionPlugin);

  var _super = _createSuper(LookupPlugin);

  function LookupPlugin() {
    var _this;

    _classCallCheck(this, LookupPlugin);

    _this = _super.apply(this, arguments);
    _this.rowSearch = new _RowSearchStrategy.RowSearchStrategy(_this.config, _this.dependencyGraph);
    return _this;
  }
  /**
   * Corresponds to VLOOKUP(key, range, index, [sorted])
   *
   * @param ast
   * @param state
   */


  _createClass(LookupPlugin, [{
    key: "vlookup",
    value: function vlookup(ast, state) {
      var _this2 = this;

      return this.runFunction(ast.args, state, this.metadata('VLOOKUP'), function (key, rangeValue, index, sorted) {
        var range = rangeValue.range;

        if (range === undefined) {
          return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.WrongType);
        }

        if (index < 1) {
          return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.LessThanOne);
        }

        if (index > range.width()) {
          return new _Cell.CellError(_Cell.ErrorType.REF, _errorMessage.ErrorMessage.IndexLarge);
        }

        return _this2.doVlookup((0, _ArithmeticHelper.zeroIfEmpty)(key), rangeValue, index - 1, sorted);
      });
    }
    /**
     * Corresponds to HLOOKUP(key, range, index, [sorted])
     *
     * @param ast
     * @param formulaAddress
     */

  }, {
    key: "hlookup",
    value: function hlookup(ast, state) {
      var _this3 = this;

      return this.runFunction(ast.args, state, this.metadata('HLOOKUP'), function (key, rangeValue, index, sorted) {
        var range = rangeValue.range;

        if (range === undefined) {
          return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.WrongType);
        }

        if (index < 1) {
          return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.LessThanOne);
        }

        if (index > range.height()) {
          return new _Cell.CellError(_Cell.ErrorType.REF, _errorMessage.ErrorMessage.IndexLarge);
        }

        return _this3.doHlookup((0, _ArithmeticHelper.zeroIfEmpty)(key), rangeValue, index - 1, sorted);
      });
    }
  }, {
    key: "match",
    value: function match(ast, state) {
      var _this4 = this;

      return this.runFunction(ast.args, state, this.metadata('MATCH'), function (key, rangeValue, sorted) {
        return _this4.doMatch((0, _ArithmeticHelper.zeroIfEmpty)(key), rangeValue, sorted);
      });
    }
  }, {
    key: "searchInRange",
    value: function searchInRange(key, range, sorted, searchStrategy) {
      if (!sorted && typeof key === 'string' && this.arithmeticHelper.requiresRegex(key)) {
        return searchStrategy.advancedFind(this.arithmeticHelper.eqMatcherFunction(key), range);
      } else {
        return searchStrategy.find(key, range, sorted);
      }
    }
  }, {
    key: "doVlookup",
    value: function doVlookup(key, rangeValue, index, sorted) {
      this.dependencyGraph.stats.start(_statistics.StatType.VLOOKUP);
      var range = rangeValue.range;
      var searchedRange;

      if (range === undefined) {
        searchedRange = _SimpleRangeValue.SimpleRangeValue.onlyValues(rangeValue.data.map(function (arg) {
          return [arg[0]];
        }));
      } else {
        searchedRange = _SimpleRangeValue.SimpleRangeValue.onlyRange(_AbsoluteCellRange.AbsoluteCellRange.spanFrom(range.start, 1, range.height()), this.dependencyGraph);
      }

      var rowIndex = this.searchInRange(key, searchedRange, sorted, this.columnSearch);
      this.dependencyGraph.stats.end(_statistics.StatType.VLOOKUP);

      if (rowIndex === -1) {
        return new _Cell.CellError(_Cell.ErrorType.NA, _errorMessage.ErrorMessage.ValueNotFound);
      }

      var value;

      if (range === undefined) {
        value = rangeValue.data[rowIndex][index];
      } else {
        var address = (0, _Cell.simpleCellAddress)(range.sheet, range.start.col + index, range.start.row + rowIndex);
        value = this.dependencyGraph.getCellValue(address);
      }

      if (value instanceof _SimpleRangeValue.SimpleRangeValue) {
        return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.WrongType);
      }

      return value;
    }
  }, {
    key: "doHlookup",
    value: function doHlookup(key, rangeValue, index, sorted) {
      var range = rangeValue.range;
      var searchedRange;

      if (range === undefined) {
        searchedRange = _SimpleRangeValue.SimpleRangeValue.onlyValues([rangeValue.data[0]]);
      } else {
        searchedRange = _SimpleRangeValue.SimpleRangeValue.onlyRange(_AbsoluteCellRange.AbsoluteCellRange.spanFrom(range.start, range.width(), 1), this.dependencyGraph);
      }

      var colIndex = this.searchInRange(key, searchedRange, sorted, this.rowSearch);

      if (colIndex === -1) {
        return new _Cell.CellError(_Cell.ErrorType.NA, _errorMessage.ErrorMessage.ValueNotFound);
      }

      var value;

      if (range === undefined) {
        value = rangeValue.data[index][colIndex];
      } else {
        var address = (0, _Cell.simpleCellAddress)(range.sheet, range.start.col + colIndex, range.start.row + index);
        value = this.dependencyGraph.getCellValue(address);
      }

      if (value instanceof _SimpleRangeValue.SimpleRangeValue) {
        return new _Cell.CellError(_Cell.ErrorType.VALUE, _errorMessage.ErrorMessage.WrongType);
      }

      return value;
    }
  }, {
    key: "doMatch",
    value: function doMatch(key, rangeValue, sorted) {
      if (rangeValue.width() > 1 && rangeValue.height() > 1) {
        return new _Cell.CellError(_Cell.ErrorType.NA);
      }

      if (rangeValue.width() === 1) {
        var index = this.columnSearch.find(key, rangeValue, sorted !== 0);

        if (index === -1) {
          return new _Cell.CellError(_Cell.ErrorType.NA, _errorMessage.ErrorMessage.ValueNotFound);
        }

        return index + 1;
      } else {
        var _index = this.rowSearch.find(key, rangeValue, sorted !== 0);

        if (_index === -1) {
          return new _Cell.CellError(_Cell.ErrorType.NA, _errorMessage.ErrorMessage.ValueNotFound);
        }

        return _index + 1;
      }
    }
  }]);

  return LookupPlugin;
}(_FunctionPlugin2.FunctionPlugin);

exports.LookupPlugin = LookupPlugin;
LookupPlugin.implementedFunctions = {
  'VLOOKUP': {
    method: 'vlookup',
    parameters: [{
      argumentType: _FunctionPlugin2.ArgumentTypes.NOERROR
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.RANGE
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.NUMBER
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.BOOLEAN,
      defaultValue: true
    }]
  },
  'HLOOKUP': {
    method: 'hlookup',
    parameters: [{
      argumentType: _FunctionPlugin2.ArgumentTypes.NOERROR
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.RANGE
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.NUMBER
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.BOOLEAN,
      defaultValue: true
    }]
  },
  'MATCH': {
    method: 'match',
    parameters: [{
      argumentType: _FunctionPlugin2.ArgumentTypes.NOERROR
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.RANGE
    }, {
      argumentType: _FunctionPlugin2.ArgumentTypes.NUMBER,
      defaultValue: 1
    }]
  }
};