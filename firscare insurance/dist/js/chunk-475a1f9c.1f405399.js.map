{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.has-own.js","webpack:///./node_modules/core-js/internals/delete-property-or-throw.js","webpack:///./src/service/EligibilityRequestService.js","webpack:///./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack:///./src/components/Eligibility/AddNewEligibilityRequest.vue","webpack:///./src/service/LocationServices.js","webpack:///./src/service/CoverageServices.js","webpack:///./src/components/Eligibility/AddNewEligibilityRequest.vue?9e1e","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/service/BeneficiaryServices.js"],"names":["$","hasOwn","target","stat","tryToString","$TypeError","TypeError","module","exports","O","P","constants","Constants","EligibilityRequestService","fetch","billing_url","headers","token","res","json","d","data","id","formData","FormData","append","send_eligibility_request_patient_healthcare","method","body","then","response","result","error","document_id","location_id","start_date","end_date","purpose","console","log","convertDateFormat","send_eligibility_request_manual","MAX_SAFE_INTEGER","it","class","_createTextVNode","_createVNode","for","_createBlock","_component_Toast","_component_Message","severity","_hoisted_3","_hoisted_5","_","_hoisted_7","_component_Dropdown","modelValue","$data","$event","options","optionLabel","filter","filterPlaceholder","placeholder","onChange","$options","_hoisted_9","_component_MultiSelect","disabled","_hoisted_11","_hoisted_13","_component_Calendar","dateFormat","_hoisted_15","_component_Button","label","icon","onClick","LocationServices","axios","url","department","resp","CoverageServices","check_coverage_request","params","name","selectedBeneficiary","beneficiaryOptions","selectedLocation","locationOptions","checkCoverage","startDate","purposeDisabled","submitButtonDisabled","endDate","SelectedEligibilityPurose","EligibilityPuroseOptions","option","value","beneficiaryService","locationServices","created","this","BeneficiaryServices","mounted","getAllBeneficiary","showError","getAllLocations","methods","showSuccess","message","$toast","add","summary","detail","life","OnSelectedBeneficiary","forEach","item","key","splice","coverage_service","checkCoverageBeneficiary","resourceType","Object","push","onSubmitForm","purpose_list","eligibilityServices","sendEligibilityRequestManual","fhir_id","__exports__","render","toObject","toAbsoluteIndex","toIntegerOrInfinity","lengthOfArrayLike","doesNotExceedSafeInteger","arraySpeciesCreate","createProperty","deletePropertyOrThrow","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","max","Math","min","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","len","actualStart","argumentsLength","arguments","length","getPatient","first_name","second_name","file_id","number","selectedInsuracePlan","selectedGender","insurance_plan","gender","third_name","dobH","dob","e_health_id","phone_number","emergency_phone_number","email","selectDocumentType","selectresidentialType","selectNationality","selectMaritialStatus","selectGender","selectBloodGroup","selectPrefferLang","_data","DOB_hijri","DOB","emergency_contact_number","document_type","residency_type","nationality","maritail_status","blood_group","preffered_language","addNewPatient","contact_info","getInsuranceSearchBeneficiary","PatientKey","insurance_payload","insurance"],"mappings":"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","file":"js/chunk-475a1f9c.1f405399.js","sourcesContent":["var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\n\n// `Object.hasOwn` method\n// https://github.com/tc39/proposal-accessible-object-hasownproperty\n$({ target: 'Object', stat: true }, {\n  hasOwn: hasOwn\n});\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","import Constants from './constant.js';\n\nvar constants = new Constants();\n\nexport default class EligibilityRequestService {\n  async getInsuranceBilling() {\n      const res = await fetch(constants.billing_url, {\n      headers: {\n        \"Authorization\": constants.token\n      }\n    });\n    const d = await res.json();\n    return d.data;\n  }\n\n  async sendEligibilityRequest(id){\n      var formData = new FormData();\n      formData.append('billing-id',id)\n      const res = await fetch(constants.send_eligibility_request_patient_healthcare, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": constants.token,\n      },\n      body: formData\n    }).then(response => response.json()).then(result => result).catch((error)=> error);\n    return res;\n  }\n\n  async sendEligibilityRequestManual(document_id,location_id,start_date,end_date,purpose){\n      console.log(purpose)\n      var formData = new FormData();\n      formData.append('document_id',document_id);\n      formData.append('eligibility_purpose',purpose);\n      formData.append('location_id',location_id);\n      formData.append('start_date',constants.convertDateFormat(start_date));\n      formData.append('end_date',constants.convertDateFormat(end_date));\n      const res = await fetch(constants.send_eligibility_request_manual, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": constants.token,\n      },\n      body: formData\n    }).then(response => response.json()).then(result => result).catch((error)=> error);\n    return res;\n  }\n\n}\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","<template>\n    <Toast />\n    <div class=\"grid\">\n        <div class=\"col-12\">\n            <Message severity=\"warn\" class=\"text-lg font-bold\">\"All the Field with <span class=\"font-bold text-pink-700\">*</span> are compulsory\"</Message>\n        </div>\n        <div class=\"col-3\">\n            <label for=\"\" class=\"text-lg font-bold col-12 ml-0 pl-0\">Select Beneficiary <span class=\"font-bold text-pink-700\">*</span></label>\n            <Dropdown v-model=\"selectedBeneficiary\" :options=\"beneficiaryOptions\" optionLabel=\"document_id\" :filter=\"true\" filterPlaceholder=\"search...\" placeholder=\"Select a Beneficiary\" class=\"col-12\" @change=\"OnSelectedBeneficiary\"/>\n        </div>\n        <div class=\"col-3\">\n            <label for=\"\" class=\"text-lg font-bold col-12 ml-0 pl-0\">Select Eligibility Purpose</label>\n            <MultiSelect v-model=\"SelectedEligibilityPurose\" :options=\"EligibilityPuroseOptions\" optionLabel=\"option\" placeholder=\"Select a Eligibility Purpose\" class=\"col-12\" :disabled=\"purposeDisabled\"/>\n        </div>\n        <div class=\"col-3\">\n            <label for=\"\" class=\"text-lg font-bold col-12 ml-0 pl-0\">Select Department/Location</label>\n            <Dropdown v-model=\"selectedLocation\" :options=\"locationOptions\" optionLabel=\"name\" :filter=\"true\" filterPlaceholder=\"search...\" placeholder=\"Select a Department/Location\" class=\"col-12\"/>\n        </div>\n        <div class=\"col-3\">\n            <label for=\"\" class=\"text-lg font-bold col-12 ml-0 pl-0\">Service Start Date<span class=\"font-bold text-pink-700\">*</span></label>\n            <Calendar v-model=\"startDate\" placeholder=\"Select start date\" class=\"col-12 h-4rem m-0 p-0\" dateFormat=\"yy-mm-dd\"/>\n        </div>\n        <div class=\"col-3\">\n            <label for=\"\" class=\"text-lg font-bold col-12 ml-0 pl-0\">Service End Date</label>\n            <Calendar v-model=\"endDate\" placeholder=\"Select end date\" class=\"col-12 h-4rem m-0 p-0\" dateFormat=\"yy-mm-dd\"/>\n        </div>\n        <div class=\"col-12 flex flex-row justify-content-center align-content-center\">\n            <Button label=\"Send Eligibility Request\" icon=\"pi pi-send\" class=\"p-text-button p-button-success col-6\" @click=\"onSubmitForm\" :disabled=\"submitButtonDisabled\"/>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport BeneficiaryServices from '@/service/BeneficiaryServices';\nimport LocationServices from '@/service/LocationServices';\nimport CoverageServices from '@/service/CoverageServices';\nimport EligibilityRequestService from '@/service/EligibilityRequestService';\nexport default {\n    name:\"AddNewEligibilityRequest\",\n    data(){\n        return{\n            selectedBeneficiary:null,\n            beneficiaryOptions:null,\n            selectedLocation:null,\n            locationOptions:null,\n            checkCoverage:false,\n            startDate:null,\n            purposeDisabled:true,\n            submitButtonDisabled:true,\n            endDate:null,\n            SelectedEligibilityPurose:null,\n            EligibilityPuroseOptions:[\n                {option: 'Benefits', value: 'benefits'},\n                {option: 'Validation', value: 'validation'},\n            ]\n        }\n    },\n    beneficiaryService:null,\n    locationServices:null,\n    created(){\n        this.beneficiaryService = new BeneficiaryServices();\n        this.locationServices = new LocationServices();\n    },\n    async mounted() {\n        await this.beneficiaryService.getAllBeneficiary().then(response =>{\n            this.beneficiaryOptions = response.data;\n        })\n        .catch((error)=>{\n            console.log(error);\n            this.showError('Unable to connect the server please check your internet or try after sometime!!!');\n        });\n        await this.locationServices.getAllLocations().then(response =>{\n            this.locationOptions = response.data;\n        })\n        .catch((error)=>{\n            console.log(error);\n            this.showError('Unable to connect the server please check your internet or try after sometime!!!');\n        });\n    },\n    methods:{\n        showSuccess(message) {this.$toast.add({severity:'success', summary: 'Success Message', detail:message, life: 6000});},\n        showError(message) {this.$toast.add({severity:'error', summary: 'Error Message', detail:message, life: 6000});},\n        async OnSelectedBeneficiary(){\n            this.purposeDisabled = true;\n            this.submitButtonDisabled = true;\n            this.SelectedEligibilityPurose=null;\n\n            this.EligibilityPuroseOptions.forEach((item,key) =>{\n                if(item.option==='Discovery'){\n                    var result = this.EligibilityPuroseOptions.splice(key,1); \n                    console.log(result);\n                }\n            })\n\n\n            const coverage_service = new CoverageServices();\n            await coverage_service.checkCoverageBeneficiary(this.selectedBeneficiary.document_id).then(response =>{\n                console.log(response);\n                if(response.data.resourceType=='Coverage'){\n                    this.purposeDisabled = false;\n                    this.submitButtonDisabled = false;\n                    this.showSuccess(\"Coverage Exist!! no option provided Discovery in Purpose\")\n                }\n            })\n            .catch(() => {\n                this.showError(\"No Coverage Found!!.You can only send the eligibility request Beneficiary that have Coverage\");\n                if(!Object.hasOwn(this.EligibilityPuroseOptions, 2)){\n                    this.EligibilityPuroseOptions.push({option: 'Discovery', value: 'discovery'},)\n                }\n                this.purposeDisabled = false;\n            })\n        },\n        async onSubmitForm(){\n            if(this.selectedBeneficiary === null || this.selectedLocation === null || this.startDate === null || this.SelectedEligibilityPurose === null){\n                this.showError(\"Please Select All the Fields with *\");\n            }\n            else{\n                var purpose_list = [];\n                this.SelectedEligibilityPurose.forEach(item =>{\n                    purpose_list.push(item.value);\n                });\n                const eligibilityServices = new EligibilityRequestService();\n                await eligibilityServices.sendEligibilityRequestManual(this.selectedBeneficiary.document_id,this.selectedLocation.fhir_id,this.startDate,this.endDate,purpose_list).then(response=>{\n                    console.log(response);\n                    this.selectedBeneficiary=null;\n                    this.selectedLocation=null;\n                    this.purposeDisabled=true;\n                    this.submitButtonDisabled=true;\n                    this.endDate=null;\n                    this.startDate=null;\n                    this.SelectedEligibilityPurose=null;\n                    this.showSuccess(\"Coverage Eligibility Request Submitted.you can see it in the transaction tab!\")\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n            }\n        }\n    }\n}\n</script>","import axios from 'axios';\nimport Constants from './constant.js';\n\nvar constants = new Constants();\n\nexport default class LocationServices{\n    async getAllLocations() {\n        var resp = await axios({\n          url:constants.department,\n          headers:{\n            \"Authorization\": constants.token\n          }\n          });\n          return resp.data;\n      }\n\n}","import axios from 'axios';\nimport Constants from './constant.js';\n\nvar constants = new Constants();\n\nexport default class CoverageServices{\n    async checkCoverageBeneficiary(document_id){\n        const resp = await axios({\n            url:constants.check_coverage_request,\n            method:\"GET\",\n            headers:{\n                \"Authorization\": constants.token\n            },\n            params:{\n                document_id:document_id\n            },\n        })\n        return resp.data;\n    }\n}","import { render } from \"./AddNewEligibilityRequest.vue?vue&type=template&id=36a6de1b\"\nimport script from \"./AddNewEligibilityRequest.vue?vue&type=script&lang=js\"\nexport * from \"./AddNewEligibilityRequest.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/shehrozkapoor/Desktop/FIRST_CARE/FIRSTCARE-INSURANCE-FRONTENT/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow(O, to);\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow(O, k - 1);\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow(O, to);\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","import axios from 'axios';\nimport Constants from './constant.js';\n\nvar constants = new Constants();\n\nexport default class BeneficiaryServices{\n    async getAllBeneficiary() {\n      var resp = await axios({\n        url:constants.getPatient,\n        headers:{\n          \"Authorization\": constants.token\n        }\n        });\n        return resp.data;\n    }\n    async getSearchBeneficiary(document_id,first_name,second_name,file_id,number,start_date,end_date,selectedInsuracePlan,selectedGender) {\n        const res = await axios({\n          url:constants.getPatient,\n          headers: {\n            \"Authorization\": constants.token\n          },\n          params:{\n            document_id: document_id??'',\n            first_name: first_name??'',\n            second_name: second_name??'',\n            file_id: file_id??'',\n            number: number??'',\n            start_date: constants.convertDateFormat(start_date)??'',\n            end_date: constants.convertDateFormat(end_date)??'',\n            insurance_plan: selectedInsuracePlan??'',\n            gender: selectedGender??'',\n          }\n        });\n      return res.data;\n    }\n    \n    async addNewBeneficiary(first_name,second_name,third_name,file_id,dobH,dob,e_health_id,document_id,phone_number,emergency_phone_number,email,insurance_plan,selectDocumentType,selectresidentialType,selectNationality,selectMaritialStatus,selectGender,selectBloodGroup,selectPrefferLang){\n        let _data = {\n          first_name:first_name,\n          second_name:second_name,\n          third_name:third_name,\n          file_id:file_id,\n          DOB_hijri:constants.convertDateFormat(dobH),\n          DOB:constants.convertDateFormat(dob),\n          e_health_id:e_health_id,\n          document_id:document_id,\n          phone_number:phone_number,\n          emergency_contact_number:emergency_phone_number,\n          email:email,\n          insurance_plan:insurance_plan,\n          document_type:selectDocumentType,\n          residency_type:selectresidentialType,\n          nationality:selectNationality,\n          maritail_status:selectMaritialStatus,\n          gender:selectGender,\n          blood_group:selectBloodGroup,\n          preffered_language:selectPrefferLang\n        }\n        const res = await axios({\n          url:constants.addNewPatient,\n          method:\"POST\",\n          headers:{\n            \"Authorization\": constants.token\n          },\n          data:_data\n        });\n      return res.data;\n    }\n    async updateBeneficiary(data){\n        let _data = {\n          first_name:data.first_name,\n          second_name:data.second_name,\n          third_name:data.third_name,\n          file_id:data.file_id,\n          DOB_hijri:constants.convertDateFormat(data.DOB_hijri),\n          DOB:constants.convertDateFormat(data.DOB),\n          e_health_id:data.e_health_id,\n          document_id:data.document_id,\n          phone_number:data.contact_info.phone_number,\n          emergency_contact_number:data.contact_info.emergency_phone_number,\n          email:data.contact_info.email,\n          insurance_plan:data.insurance_plan,\n          document_type:data.document_type,\n          residency_type:data.residency_type,\n          nationality:data.nationality,\n          maritail_status:data.maritail_status,\n          gender:data.gender,\n          blood_group:data.blood_group,\n          preffered_language:data.preffered_language\n        }\n        console.log(`this is data:${_data}`);\n        const res = await axios({\n          url:constants.addNewPatient,\n          method:\"PUT\",\n          headers:{\n            \"Authorization\": constants.token\n          },\n          data:_data\n        });\n      return res.data;\n    }\n\n\n    async getInsuranceSeatchBeneficiary(id){\n      var resp = await axios({\n        method:\"GET\",\n        url:constants.getInsuranceSearchBeneficiary,\n        params:{\n          PatientKey:id\n        },\n        headers: {\n          \"Authorization\": constants.token\n        },\n      });\n      return resp.data;\n    }\n\n    async saveInsuranceSeatchBeneficiaryDetails(insurance_payload,id){\n      let _data={\n        insurance_payload:insurance_payload,\n        document_id:id\n      }\n      var resp = await axios({\n        method:\"POST\",\n        url:constants.getInsuranceSearchBeneficiary,\n        headers: {\n          \"Authorization\": constants.token\n        },\n        data:_data\n      });\n      return resp.data;\n    }\n\n    async getInsuranceDetails(id){\n      const resp = await axios({\n        url: constants.insurance,\n        method:\"GET\",\n        headers: {\n          \"Authorization\": constants.token\n        },\n        params:{\n          'document_id':id\n        }\n      });\n      return resp.data;\n    }\n}"],"sourceRoot":""}